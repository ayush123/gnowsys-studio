

<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>JSNetworkX/jsnetworkx.js at master · fkling/JSNetworkX · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <link rel="logo" type="image/svg" href="https://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
    <link rel="assets" href="https://a248.e.akamai.net/assets.github.com/">
    <link rel="xhr-socket" href="/_sockets" />
    


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="github" name="octolytics-app-id" />

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="sgn6foXW7ds/0WR5BIni7LawK6yPjXvac57o8Ybr40g=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/assets/github-6dd454fdb86cf3bd9a1044d7d0f63179100d0525.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://a248.e.akamai.net/assets.github.com/assets/github2-58b10e96bcdc3e0d5ea328ffcd01e36e2e8fd07e.css" media="all" rel="stylesheet" type="text/css" />
    


      <script src="https://a248.e.akamai.net/assets.github.com/assets/frameworks-4c434fa1705bf526e191eec0cd8fab1a5ce3e326.js" type="text/javascript"></script>
      <script src="https://a248.e.akamai.net/assets.github.com/assets/github-4d962942351f9bca93a4cc0818497ecb764bf2aa.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="67766df09e54c18702c5229297b15d13">

        <link data-pjax-transient rel='permalink' href='/fkling/JSNetworkX/blob/01b734873cb2383e1001c8021dee34ba0e693e6f/jsnetworkx.js'>

  <meta property="og:title" content="JSNetworkX"/>
  <meta property="og:type" content="githubog:gitrepository"/>
  <meta property="og:url" content="https://github.com/fkling/JSNetworkX"/>
  <meta property="og:image" content="https://a248.e.akamai.net/assets.github.com/images/gravatars/gravatar-user-420.png"/>
  <meta property="og:site_name" content="GitHub"/>
  <meta property="og:description" content="JSNetworkX - A port of the graph library NetworkX to JavaScript"/>

  <meta name="description" content="JSNetworkX - A port of the graph library NetworkX to JavaScript" />

  <meta content="179026" name="octolytics-dimension-user_id" /><meta content="fkling" name="octolytics-dimension-user_login" /><meta content="3966929" name="octolytics-dimension-repository_id" /><meta content="fkling/JSNetworkX" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="3966929" name="octolytics-dimension-repository_network_root_id" /><meta content="fkling/JSNetworkX" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/fkling/JSNetworkX/commits/master.atom" rel="alternate" title="Recent Commits to JSNetworkX:master" type="application/atom+xml" />

  </head>


  <body class="logged_out page-blob linux vis-public env-production  kill-the-chrome">
    <div id="wrapper">

      
      
      

      
      <div class="header header-logged-out">
  <div class="container clearfix">

    <a class="header-logo-wordmark" href="https://github.com/">Github</a>

    <div class="header-actions">
      <a class="button primary" href="/signup">Sign up</a>
      <a class="button" href="/login?return_to=%2Ffkling%2FJSNetworkX%2Fblob%2Fmaster%2Fjsnetworkx.js">Sign in</a>
    </div>

    <div class="command-bar js-command-bar  in-repository">


      <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
        <li class="features"><a href="/features">Features</a></li>
          <li class="enterprise"><a href="https://enterprise.github.com/">Enterprise</a></li>
          <li class="blog"><a href="/blog">Blog</a></li>
      </ul>
        <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
      data-repo="fkling/JSNetworkX"
      data-branch="master"
      data-sha="5637f4671f46d81a82a585d8251a33bcec90ae8c"
  >

    <input type="hidden" name="nwo" value="fkling/JSNetworkX" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="octicon help tooltipped downwards" title="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
    </div>

  </div>
</div>


      


          
  <div class="site" itemscope itemtype="http://schema.org/WebPage">
    
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">



    <li>
      <a href="/login?return_to=%2Ffkling%2FJSNetworkX"
        class="minibutton with-count js-toggler-target star-button entice tooltipped upwards"
        title="You must be signed in to use this feature" rel="nofollow">
        <span class="octicon octicon-star"></span>Star
      </a>
      <a class="social-count js-social-count" href="/fkling/JSNetworkX/stargazers">
        105
      </a>
    </li>
    <li>
      <a href="/login?return_to=%2Ffkling%2FJSNetworkX"
        class="minibutton with-count js-toggler-target fork-button entice tooltipped upwards"
        title="You must be signed in to fork a repository" rel="nofollow">
        <span class="octicon octicon-git-branch"></span>Fork
      </a>
      <a href="/fkling/JSNetworkX/network" class="social-count">
        14
      </a>
    </li>
</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author">
            <a href="/fkling" class="url fn" itemprop="url" rel="author"><span itemprop="title">fkling</span></a></span
          ><span class="repohead-name-divider">/</span><strong
          ><a href="/fkling/JSNetworkX" class="js-current-repository js-repo-home-link">JSNetworkX</a></strong>

          <span class="page-context-loader">
            <img alt="Octocat-spinner-32" height="16" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">

      <div class="repository-with-sidebar repo-container
            
            ">

          <div class="repository-sidebar">

            

<div class="repo-nav repo-nav-full js-repository-container-pjax js-octicon-loaders">
  <div class="repo-nav-contents">
    <ul class="repo-menu">
      <li class="tooltipped leftwards" title="Code">
        <a href="/fkling/JSNetworkX" class="js-selected-navigation-item selected" data-gotokey="c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /fkling/JSNetworkX">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped leftwards" title="Issues">
          <a href="/fkling/JSNetworkX/issues" class="js-selected-navigation-item js-disable-pjax" data-gotokey="i" data-selected-links="repo_issues /fkling/JSNetworkX/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>3</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped leftwards" title="Pull Requests"><a href="/fkling/JSNetworkX/pulls" class="js-selected-navigation-item js-disable-pjax" data-gotokey="p" data-selected-links="repo_pulls /fkling/JSNetworkX/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>0</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


        <li class="tooltipped leftwards" title="Wiki">
          <a href="/fkling/JSNetworkX/wiki" class="js-selected-navigation-item " data-pjax="true" data-selected-links="repo_wiki /fkling/JSNetworkX/wiki">
            <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>


    </ul>
    <div class="repo-menu-separator"></div>
    <ul class="repo-menu">

      <li class="tooltipped leftwards" title="Pulse">
        <a href="/fkling/JSNetworkX/pulse" class="js-selected-navigation-item " data-pjax="true" data-selected-links="pulse /fkling/JSNetworkX/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" title="Graphs">
        <a href="/fkling/JSNetworkX/graphs" class="js-selected-navigation-item " data-pjax="true" data-selected-links="repo_graphs repo_contributors /fkling/JSNetworkX/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" title="Network">
        <a href="/fkling/JSNetworkX/network" class="js-selected-navigation-item js-disable-pjax" data-selected-links="repo_network /fkling/JSNetworkX/network">
          <span class="octicon octicon-git-branch"></span> <span class="full-word">Network</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

    </ul>

  </div>
</div>


            <div class="only-with-full-nav">

              

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>

  <input type="text" class="clone js-url-field"
         value="https://github.com/fkling/JSNetworkX.git" readonly="readonly">

  <span class="js-zeroclipboard url-box-clippy zeroclipboard-button" data-clipboard-text="https://github.com/fkling/JSNetworkX.git" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>

  <input type="text" class="clone js-url-field"
         value="https://github.com/fkling/JSNetworkX" readonly="readonly">

  <span class="js-zeroclipboard url-box-clippy zeroclipboard-button" data-clipboard-text="https://github.com/fkling/JSNetworkX" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
</div>



<p class="clone-options">You can clone with
    <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
    <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>,
  and <a href="https://help.github.com/articles/which-remote-url-should-i-use">other methods.</a>
</p>




                <a href="/fkling/JSNetworkX/archive/master.zip"
                   class="minibutton sidebar-button"
                   title="Download this repository as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>

            </div>
          </div>

          <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
            


<!-- blob contrib key: blob_contributors:v21:79ab9a46e6bea696a6eefcd21118a0cc -->
<!-- blob contrib frag key: views10/v8/blob_contributors:v21:79ab9a46e6bea696a6eefcd21118a0cc -->


      <p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

        <a href="/fkling/JSNetworkX/find/master" data-pjax data-hotkey="t" style="display:none">Show File Finder</a>

        <div class="file-navigation">
          


<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="master">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-remove-close js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fkling/JSNetworkX/blob/gh-pages/jsnetworkx.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="gh-pages" rel="nofollow" title="gh-pages">gh-pages</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fkling/JSNetworkX/blob/master/jsnetworkx.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="master" rel="nofollow" title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fkling/JSNetworkX/blob/v0.1.1/jsnetworkx.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v0.1.1" rel="nofollow" title="v0.1.1">v0.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fkling/JSNetworkX/blob/v0.1/jsnetworkx.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v0.1" rel="nofollow" title="v0.1">v0.1</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

          <div class="breadcrumb">
            <span class='bold'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/fkling/JSNetworkX" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">JSNetworkX</span></a></span></span><span class="separator"> / </span><strong class="final-path">jsnetworkx.js</strong> <span class="js-zeroclipboard zeroclipboard-button" data-clipboard-text="jsnetworkx.js" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
          </div>
        </div>


        
  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://secure.gravatar.com/avatar/8458fc11e042dd13cc31efdeac07b1a3?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
    <span class="author"><a href="/midgleyf" rel="author">midgleyf</a></span>
    <time class="js-relative-date" datetime="2013-04-25T15:16:15-07:00" title="2013-04-25 15:16:15">April 25, 2013</time>
    <div class="commit-title">
        <a href="/fkling/JSNetworkX/commit/01b734873cb2383e1001c8021dee34ba0e693e6f" class="message">Add 'algorithms/centrality/betweenness'.</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>2</strong> contributors</a></p>
          <a class="avatar tooltipped downwards" title="fkling" href="/fkling/JSNetworkX/commits/master/jsnetworkx.js?author=fkling"><img height="20" src="https://secure.gravatar.com/avatar/f394b822c935303424f4c2ac1ad64831?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /></a>
    <a class="avatar tooltipped downwards" title="midgleyf" href="/fkling/JSNetworkX/commits/master/jsnetworkx.js?author=midgleyf"><img height="20" src="https://secure.gravatar.com/avatar/8458fc11e042dd13cc31efdeac07b1a3?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /></a>


    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
        <li class="facebox-user-list-item">
          <img height="24" src="https://secure.gravatar.com/avatar/f394b822c935303424f4c2ac1ad64831?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/fkling">fkling</a>
        </li>
        <li class="facebox-user-list-item">
          <img height="24" src="https://secure.gravatar.com/avatar/8458fc11e042dd13cc31efdeac07b1a3?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/midgleyf">midgleyf</a>
        </li>
      </ul>
    </div>
  </div>



        <div id="files" class="bubble">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><b class="octicon octicon-file-text"></b></span>
                <span class="mode" title="File Mode">file</span>
                  <span>175 lines (174 sloc)</span>
                <span>83.247 kb</span>
              </div>
              <div class="actions">
                <div class="button-group">
                      <a class="minibutton js-entice" href=""
                         data-entice="You must be signed in and on a branch to make or propose changes">Edit</a>
                  <a href="/fkling/JSNetworkX/raw/master/jsnetworkx.js" class="button minibutton " id="raw-url">Raw</a>
                    <a href="/fkling/JSNetworkX/blame/master/jsnetworkx.js" class="button minibutton ">Blame</a>
                  <a href="/fkling/JSNetworkX/commits/master/jsnetworkx.js" class="button minibutton " rel="nofollow">History</a>
                </div><!-- /.button-group -->
              </div><!-- /.actions -->

            </div>
                <div class="blob-wrapper data type-javascript js-blob-data">
      <table class="file-code file-diff">
        <tr class="file-code-line">
          <td class="blob-line-nums">
            <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>
<span id="L29" rel="#L29">29</span>
<span id="L30" rel="#L30">30</span>
<span id="L31" rel="#L31">31</span>
<span id="L32" rel="#L32">32</span>
<span id="L33" rel="#L33">33</span>
<span id="L34" rel="#L34">34</span>
<span id="L35" rel="#L35">35</span>
<span id="L36" rel="#L36">36</span>
<span id="L37" rel="#L37">37</span>
<span id="L38" rel="#L38">38</span>
<span id="L39" rel="#L39">39</span>
<span id="L40" rel="#L40">40</span>
<span id="L41" rel="#L41">41</span>
<span id="L42" rel="#L42">42</span>
<span id="L43" rel="#L43">43</span>
<span id="L44" rel="#L44">44</span>
<span id="L45" rel="#L45">45</span>
<span id="L46" rel="#L46">46</span>
<span id="L47" rel="#L47">47</span>
<span id="L48" rel="#L48">48</span>
<span id="L49" rel="#L49">49</span>
<span id="L50" rel="#L50">50</span>
<span id="L51" rel="#L51">51</span>
<span id="L52" rel="#L52">52</span>
<span id="L53" rel="#L53">53</span>
<span id="L54" rel="#L54">54</span>
<span id="L55" rel="#L55">55</span>
<span id="L56" rel="#L56">56</span>
<span id="L57" rel="#L57">57</span>
<span id="L58" rel="#L58">58</span>
<span id="L59" rel="#L59">59</span>
<span id="L60" rel="#L60">60</span>
<span id="L61" rel="#L61">61</span>
<span id="L62" rel="#L62">62</span>
<span id="L63" rel="#L63">63</span>
<span id="L64" rel="#L64">64</span>
<span id="L65" rel="#L65">65</span>
<span id="L66" rel="#L66">66</span>
<span id="L67" rel="#L67">67</span>
<span id="L68" rel="#L68">68</span>
<span id="L69" rel="#L69">69</span>
<span id="L70" rel="#L70">70</span>
<span id="L71" rel="#L71">71</span>
<span id="L72" rel="#L72">72</span>
<span id="L73" rel="#L73">73</span>
<span id="L74" rel="#L74">74</span>
<span id="L75" rel="#L75">75</span>
<span id="L76" rel="#L76">76</span>
<span id="L77" rel="#L77">77</span>
<span id="L78" rel="#L78">78</span>
<span id="L79" rel="#L79">79</span>
<span id="L80" rel="#L80">80</span>
<span id="L81" rel="#L81">81</span>
<span id="L82" rel="#L82">82</span>
<span id="L83" rel="#L83">83</span>
<span id="L84" rel="#L84">84</span>
<span id="L85" rel="#L85">85</span>
<span id="L86" rel="#L86">86</span>
<span id="L87" rel="#L87">87</span>
<span id="L88" rel="#L88">88</span>
<span id="L89" rel="#L89">89</span>
<span id="L90" rel="#L90">90</span>
<span id="L91" rel="#L91">91</span>
<span id="L92" rel="#L92">92</span>
<span id="L93" rel="#L93">93</span>
<span id="L94" rel="#L94">94</span>
<span id="L95" rel="#L95">95</span>
<span id="L96" rel="#L96">96</span>
<span id="L97" rel="#L97">97</span>
<span id="L98" rel="#L98">98</span>
<span id="L99" rel="#L99">99</span>
<span id="L100" rel="#L100">100</span>
<span id="L101" rel="#L101">101</span>
<span id="L102" rel="#L102">102</span>
<span id="L103" rel="#L103">103</span>
<span id="L104" rel="#L104">104</span>
<span id="L105" rel="#L105">105</span>
<span id="L106" rel="#L106">106</span>
<span id="L107" rel="#L107">107</span>
<span id="L108" rel="#L108">108</span>
<span id="L109" rel="#L109">109</span>
<span id="L110" rel="#L110">110</span>
<span id="L111" rel="#L111">111</span>
<span id="L112" rel="#L112">112</span>
<span id="L113" rel="#L113">113</span>
<span id="L114" rel="#L114">114</span>
<span id="L115" rel="#L115">115</span>
<span id="L116" rel="#L116">116</span>
<span id="L117" rel="#L117">117</span>
<span id="L118" rel="#L118">118</span>
<span id="L119" rel="#L119">119</span>
<span id="L120" rel="#L120">120</span>
<span id="L121" rel="#L121">121</span>
<span id="L122" rel="#L122">122</span>
<span id="L123" rel="#L123">123</span>
<span id="L124" rel="#L124">124</span>
<span id="L125" rel="#L125">125</span>
<span id="L126" rel="#L126">126</span>
<span id="L127" rel="#L127">127</span>
<span id="L128" rel="#L128">128</span>
<span id="L129" rel="#L129">129</span>
<span id="L130" rel="#L130">130</span>
<span id="L131" rel="#L131">131</span>
<span id="L132" rel="#L132">132</span>
<span id="L133" rel="#L133">133</span>
<span id="L134" rel="#L134">134</span>
<span id="L135" rel="#L135">135</span>
<span id="L136" rel="#L136">136</span>
<span id="L137" rel="#L137">137</span>
<span id="L138" rel="#L138">138</span>
<span id="L139" rel="#L139">139</span>
<span id="L140" rel="#L140">140</span>
<span id="L141" rel="#L141">141</span>
<span id="L142" rel="#L142">142</span>
<span id="L143" rel="#L143">143</span>
<span id="L144" rel="#L144">144</span>
<span id="L145" rel="#L145">145</span>
<span id="L146" rel="#L146">146</span>
<span id="L147" rel="#L147">147</span>
<span id="L148" rel="#L148">148</span>
<span id="L149" rel="#L149">149</span>
<span id="L150" rel="#L150">150</span>
<span id="L151" rel="#L151">151</span>
<span id="L152" rel="#L152">152</span>
<span id="L153" rel="#L153">153</span>
<span id="L154" rel="#L154">154</span>
<span id="L155" rel="#L155">155</span>
<span id="L156" rel="#L156">156</span>
<span id="L157" rel="#L157">157</span>
<span id="L158" rel="#L158">158</span>
<span id="L159" rel="#L159">159</span>
<span id="L160" rel="#L160">160</span>
<span id="L161" rel="#L161">161</span>
<span id="L162" rel="#L162">162</span>
<span id="L163" rel="#L163">163</span>
<span id="L164" rel="#L164">164</span>
<span id="L165" rel="#L165">165</span>
<span id="L166" rel="#L166">166</span>
<span id="L167" rel="#L167">167</span>
<span id="L168" rel="#L168">168</span>
<span id="L169" rel="#L169">169</span>
<span id="L170" rel="#L170">170</span>
<span id="L171" rel="#L171">171</span>
<span id="L172" rel="#L172">172</span>
<span id="L173" rel="#L173">173</span>
<span id="L174" rel="#L174">174</span>

          </td>
          <td class="blob-line-code">
                  <div class="highlight"><pre><div class='line' id='LC1'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">global</span><span class="p">,</span> <span class="nx">factory</span><span class="p">)</span> <span class="p">{</span> <span class="kd">function</span> <span class="nx">extractNS</span><span class="p">(){</span> <span class="kd">var</span> <span class="nx">g</span> <span class="o">=</span> <span class="p">{};</span> <span class="k">return</span> <span class="nx">factory</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span> <span class="nx">global</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">jsnx</span><span class="p">;}</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">define</span> <span class="o">===</span> <span class="s1">&#39;function&#39;</span> <span class="o">&amp;&amp;</span> <span class="nx">define</span><span class="p">.</span><span class="nx">amd</span><span class="p">){</span> <span class="cm">/*AMD*/</span> <span class="nx">define</span><span class="p">(</span><span class="nx">extractNS</span><span class="p">);</span> <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">module</span> <span class="o">!==</span> <span class="s1">&#39;undefined&#39;</span> <span class="o">&amp;&amp;</span> <span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="p">){</span> <span class="cm">/*node*/</span> <span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="nx">extractNS</span><span class="p">();</span> <span class="p">}</span> <span class="k">else</span> <span class="p">{</span> <span class="nx">factory</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">global</span><span class="p">,</span> <span class="nx">global</span><span class="p">);</span> <span class="p">}</span> <span class="p">}(</span><span class="k">this</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nb">window</span><span class="p">)</span> <span class="p">{</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">throw</span> <span class="nx">a</span><span class="p">;}</span><span class="kd">var</span> <span class="nx">aa</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">p</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="kd">function</span> <span class="nx">ba</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">}}</span><span class="kd">var</span> <span class="nx">q</span><span class="p">,</span><span class="nx">ea</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="kd">function</span> <span class="nx">fa</span><span class="p">(){}</span></div><div class='line' id='LC2'><span class="kd">function</span> <span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nb">Array</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;array&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nb">Object</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;[object Window]&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;object&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;[object Array]&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">splice</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">propertyIsEnumerable</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">propertyIsEnumerable</span><span class="p">(</span><span class="s2">&quot;splice&quot;</span><span class="p">))</span><span class="k">return</span><span class="s2">&quot;array&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;[object Function]&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">propertyIsEnumerable</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">propertyIsEnumerable</span><span class="p">(</span><span class="s2">&quot;call&quot;</span><span class="p">))</span><span class="k">return</span><span class="s2">&quot;function&quot;</span><span class="p">}</span><span class="k">else</span> <span class="k">return</span><span class="s2">&quot;null&quot;</span><span class="p">;</span></div><div class='line' id='LC3'><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;object&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">!==</span><span class="nx">aa</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ga</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;array&quot;</span><span class="o">==</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="s2">&quot;array&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">}</span><span class="kd">function</span> <span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;boolean&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ia</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ja</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">ka</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">||</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">}</span><span class="kd">var</span> <span class="nx">la</span><span class="o">=</span><span class="s2">&quot;closure_uid_&quot;</span><span class="o">+</span><span class="p">(</span><span class="mi">1</span><span class="nx">E9</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">),</span><span class="nx">ma</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span></div><div class='line' id='LC4'><span class="kd">function</span> <span class="nx">na</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">bind</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">oa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="nb">Error</span><span class="p">());</span><span class="k">if</span><span class="p">(</span><span class="mi">2</span><span class="o">&lt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">unshift</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}}</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">pa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">pa</span><span class="o">=</span><span class="nb">Function</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">bind</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">!=</span><span class="nb">Function</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">bind</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;native code&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">na</span><span class="o">:</span><span class="nx">oa</span><span class="p">;</span><span class="k">return</span> <span class="nx">pa</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}</span></div><div class='line' id='LC5'><span class="kd">function</span> <span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">ea</span><span class="p">;</span><span class="o">!</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">execScript</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">execScript</span><span class="p">(</span><span class="s2">&quot;var &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">shift</span><span class="p">());)</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">?</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">:</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="p">{}}</span><span class="kd">function</span> <span class="nx">qa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(){}</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">bb</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="k">new</span> <span class="nx">c</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">constructor</span><span class="o">=</span><span class="nx">a</span><span class="p">};</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">ra</span><span class="o">=</span><span class="nx">z</span><span class="p">.</span><span class="nx">indexOf</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">z</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">==</span><span class="nx">l</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="nx">u</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="mi">1</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">for</span><span class="p">(;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">;</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">},</span><span class="nx">A</span><span class="o">=</span><span class="nx">z</span><span class="p">.</span><span class="nx">forEach</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">z</span><span class="p">.</span><span class="nx">forEach</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">sa</span><span class="o">=</span><span class="nx">z</span><span class="p">.</span><span class="nx">filter</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">z</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span></div><div class='line' id='LC6'><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span> <span class="k">in</span> <span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="p">];</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">)}</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">ta</span><span class="o">=</span><span class="nx">z</span><span class="p">.</span><span class="nx">map</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">z</span><span class="p">.</span><span class="nx">map</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nb">Array</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span> <span class="k">in</span> <span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">g</span><span class="p">,</span><span class="nx">a</span><span class="p">));</span><span class="k">return</span> <span class="nx">e</span><span class="p">};</span><span class="kd">function</span> <span class="nx">ua</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">reduce</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">reduce</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">aa</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">)});</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span></div><div class='line' id='LC7'><span class="kd">var</span> <span class="nx">va</span><span class="o">=</span><span class="nx">z</span><span class="p">.</span><span class="nx">some</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">z</span><span class="p">.</span><span class="nx">some</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="nx">k</span><span class="p">;</span><span class="k">return</span> <span class="nx">p</span><span class="p">};</span><span class="kd">function</span> <span class="nx">wa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">a</span><span class="o">:</span><span class="p">{</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">aa</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">)){</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">break</span> <span class="nx">a</span><span class="p">}</span><span class="nx">c</span><span class="o">=-</span><span class="mi">1</span><span class="p">}</span><span class="k">return</span> <span class="mi">0</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">?</span><span class="nx">l</span><span class="o">:</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">xa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">ga</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">--</span><span class="p">)</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Aa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">ra</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">z</span><span class="p">.</span><span class="nx">splice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">)}</span></div><div class='line' id='LC8'><span class="kd">function</span> <span class="nx">Ba</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">z</span><span class="p">.</span><span class="nx">concat</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">z</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Fa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">Array</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="k">return</span><span class="p">[]}</span><span class="kd">function</span> <span class="nx">Ga</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">z</span><span class="p">.</span><span class="nx">splice</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">Ha</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">Ha</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="mi">2</span><span class="o">&gt;=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">z</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">z</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Ia</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||!</span><span class="nx">t</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="nx">p</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="nx">Na</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]))</span><span class="k">return</span> <span class="nx">p</span><span class="p">;</span><span class="k">return</span> <span class="nx">k</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Oa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">b</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Na</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">===</span><span class="nx">b</span><span class="p">}</span></div><div class='line' id='LC9'><span class="kd">function</span> <span class="nx">Pa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Qa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&gt;=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">])}</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">Ra</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">--</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">b</span><span class="p">()</span><span class="o">*</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">)),</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">}};</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="s2">&quot;StopIteration&quot;</span><span class="k">in</span> <span class="nx">ea</span><span class="o">?</span><span class="nx">ea</span><span class="p">.</span><span class="nx">StopIteration</span><span class="o">:</span><span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;StopIteration&quot;</span><span class="p">);</span><span class="kd">function</span> <span class="nx">D</span><span class="p">(){}</span><span class="nx">D</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">h</span><span class="p">(</span><span class="nx">B</span><span class="p">)};</span><span class="nx">D</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">M</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="kd">function</span> <span class="nx">Ta</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">D</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">M</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">M</span><span class="p">(</span><span class="nx">p</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(;;){</span><span class="nx">b</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">B</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="o">++</span><span class="p">];</span><span class="nx">b</span><span class="o">++</span><span class="p">}};</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="nx">h</span><span class="p">(</span><span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Not implemented&quot;</span><span class="p">))}</span></div><div class='line' id='LC10'><span class="kd">function</span> <span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">try</span><span class="p">{</span><span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">d</span><span class="o">!==</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">d</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">a</span><span class="o">=</span><span class="nx">Ta</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="k">for</span><span class="p">(;;)</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">next</span><span class="p">(),</span><span class="nx">aa</span><span class="p">,</span><span class="nx">a</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">!==</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">e</span><span class="p">)}}}</span><span class="kd">function</span> <span class="nx">Ua</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">Ta</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(;;){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">next</span><span class="p">();</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">aa</span><span class="p">,</span><span class="nx">d</span><span class="p">)}};</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Va</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">aa</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">)});</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Wa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">arguments</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">d</span><span class="o">&gt;=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">B</span><span class="p">),</span><span class="nx">Ta</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]).</span><span class="nx">next</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">a</span><span class="o">!==</span><span class="nx">B</span><span class="o">||</span><span class="nx">d</span><span class="o">&gt;=</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="o">++</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">next</span><span class="p">()}};</span><span class="k">return</span> <span class="nx">e</span><span class="p">}</span></div><div class='line' id='LC11'><span class="kd">function</span> <span class="nx">Xa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="nx">Fa</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">Ta</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Ya</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">Ta</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">next</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="o">!=</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">b</span><span class="p">}};</span><span class="kd">function</span> <span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Za</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">{},</span><span class="nx">e</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">b</span><span class="o">++</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">$a</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ab</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">bb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">p</span><span class="p">;</span><span class="k">return</span> <span class="nx">k</span><span class="p">}</span><span class="kd">function</span> <span class="nx">cb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">:</span><span class="nx">c</span><span class="p">}</span></div><div class='line' id='LC12'><span class="kd">function</span> <span class="nx">db</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{},</span><span class="nx">c</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">var</span> <span class="nx">eb</span><span class="o">=</span><span class="s2">&quot;constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="kd">function</span> <span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">eb</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">eb</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">])}}</span></div><div class='line' id='LC13'><span class="kd">function</span> <span class="nx">fb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">ga</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span><span class="k">return</span> <span class="nx">fb</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">b</span><span class="o">%</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Uneven number of arguments&quot;</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{},</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="o">+=</span><span class="mi">2</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">d</span><span class="p">]]</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="p">{</span><span class="nx">Xa</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span><span class="o">*</span><span class="nx">a</span><span class="p">)},</span><span class="nx">cb</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">a</span><span class="p">)},</span><span class="nx">Ra</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="p">)},</span><span class="nx">Ia</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="o">%</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="mi">0</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">*</span><span class="nx">b</span><span class="o">?</span><span class="nx">c</span><span class="o">+</span><span class="nx">b</span><span class="o">:</span><span class="nx">c</span><span class="p">},</span><span class="nx">Ua</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">a</span><span class="p">)},</span><span class="nx">Wa</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nx">b</span><span class="p">)</span><span class="o">&lt;=</span><span class="p">(</span><span class="nx">c</span><span class="o">||</span><span class="mi">1</span><span class="nx">E</span><span class="o">-</span><span class="mi">6</span><span class="p">)},</span><span class="nx">ha</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">L</span><span class="p">.</span><span class="nx">Ia</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">360</span><span class="p">)},</span><span class="nx">ua</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">180</span><span class="p">},</span><span class="nx">Na</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="mi">180</span><span class="o">*</span><span class="nx">a</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">},</span><span class="nx">Pa</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">ua</span><span class="p">(</span><span class="nx">a</span><span class="p">))},</span><span class="nx">Qa</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">ua</span><span class="p">(</span><span class="nx">a</span><span class="p">))},</span><span class="nx">ka</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC14'><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="nx">L</span><span class="p">.</span><span class="nx">ha</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">Na</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">atan2</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">-</span><span class="nx">a</span><span class="p">)))},</span><span class="nx">Oa</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">ha</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">-</span><span class="nx">L</span><span class="p">.</span><span class="nx">ha</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="mi">180</span><span class="o">&lt;</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="o">-=</span><span class="mi">360</span><span class="o">:-</span><span class="mi">180</span><span class="o">&gt;=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">360</span><span class="o">+</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">$a</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">},</span><span class="nx">Va</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">==</span><span class="nx">b</span><span class="p">};</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">[],</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">=</span><span class="p">[],</span><span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">m</span><span class="o">&lt;=</span><span class="nx">e</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;=</span><span class="nx">e</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">m</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">n</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span><span class="o">?</span><span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="p">][</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="nx">n</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="o">:</span><span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="p">][</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="nx">n</span><span class="p">],</span><span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="p">][</span><span class="nx">n</span><span class="o">-</span><span class="mi">1</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="p">[],</span><span class="nx">m</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">;)</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">m</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">n</span><span class="o">-</span></div><div class='line' id='LC15'><span class="mi">1</span><span class="p">])</span><span class="o">?</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="nx">m</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)),</span><span class="nx">m</span><span class="o">--</span><span class="p">,</span><span class="nx">n</span><span class="o">--</span><span class="p">)</span><span class="o">:</span><span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="nx">n</span><span class="p">]</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="p">][</span><span class="nx">n</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">?</span><span class="nx">m</span><span class="o">--:</span><span class="nx">n</span><span class="o">--</span><span class="p">;</span><span class="k">return</span> <span class="nx">x</span><span class="p">},</span><span class="nx">v</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">ua</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="p">})},</span><span class="nx">Ba</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">L</span><span class="p">.</span><span class="nx">v</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)</span><span class="o">/</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">},</span><span class="nx">ab</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">2</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">Ba</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">arguments</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">v</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">ta</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="mi">2</span><span class="p">)}))</span><span class="o">/</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">Ta</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">isFinite</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="o">%</span><span class="mi">1</span><span class="p">},</span><span class="nx">Sa</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">isFinite</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">Za</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span></div><div class='line' id='LC16'><span class="p">(</span><span class="nx">b</span><span class="o">||</span><span class="mi">2</span><span class="nx">E</span><span class="o">-</span><span class="mi">15</span><span class="p">))},</span><span class="nx">Ya</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="p">(</span><span class="nx">b</span><span class="o">||</span><span class="mi">2</span><span class="nx">E</span><span class="o">-</span><span class="mi">15</span><span class="p">))}};</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.filter&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">Ta</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(;;){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">next</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">aa</span><span class="p">,</span><span class="nx">d</span><span class="p">))</span><span class="k">return</span> <span class="nx">a</span><span class="p">}};</span><span class="k">return</span> <span class="nx">a</span><span class="p">});</span><span class="kd">function</span> <span class="nx">gb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">Va</span><span class="p">(</span><span class="nx">kb</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">return</span> <span class="nx">a</span><span class="p">},{})}</span><span class="kd">function</span> <span class="nx">lb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">s</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">l</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{};</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">});</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">mb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">D</span><span class="o">||</span><span class="nx">ja</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">M</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">nb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">O</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">Q</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">ob</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">TypeError</span><span class="p">)}</span></div><div class='line' id='LC17'><span class="kd">function</span> <span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">)}}</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">O</span><span class="o">?</span><span class="nx">E</span><span class="p">(</span><span class="nx">kb</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">mb</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">ka</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">M</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.forEach&quot;</span><span class="p">,</span><span class="nx">M</span><span class="p">);</span><span class="kd">function</span> <span class="nx">P</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">O</span><span class="p">)</span><span class="k">return</span> <span class="nx">P</span><span class="p">(</span><span class="nx">kb</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="nx">ta</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">mb</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="nx">Ua</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">ka</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="nx">Za</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">TypeError</span><span class="p">)}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.map&quot;</span><span class="p">,</span><span class="nx">P</span><span class="p">);</span></div><div class='line' id='LC18'><span class="kd">function</span> <span class="nx">pb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">arguments</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">return</span> <span class="nx">Qa</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">mb</span><span class="p">(</span><span class="nx">c</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">next</span><span class="p">());</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">ka</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">return</span> <span class="nx">Qa</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">ta</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">H</span><span class="p">));</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">TypeError</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">qb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">ja</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">Q</span><span class="p">(</span><span class="nx">P</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}))</span><span class="o">:</span><span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">a</span><span class="p">)}</span></div><div class='line' id='LC19'><span class="kd">function</span> <span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="nx">Ta</span><span class="p">([]);</span><span class="mi">1</span><span class="o">===</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="mi">2</span><span class="o">===</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="o">:</span><span class="mi">3</span><span class="o">===</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">===</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="s2">&quot;range() step argument must not be zero&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){(</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">&lt;=</span><span class="nx">b</span><span class="o">||!</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">&gt;=</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">B</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">+=</span><span class="nx">c</span><span class="p">;</span><span class="k">return</span> <span class="nx">g</span><span class="p">};</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span></div><div class='line' id='LC20'><span class="kd">function</span> <span class="nx">rb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">2</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="k">new</span> <span class="nx">D</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="nx">R</span><span class="p">(</span><span class="mi">2</span><span class="p">));</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">ta</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]});</span><span class="k">this</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">p</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">!=</span><span class="nx">e</span><span class="o">+</span><span class="nx">c</span><span class="o">-</span><span class="mi">2</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="nx">a</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="nx">B</span><span class="p">);</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">+=</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="mi">2</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">ta</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]})};</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span></div><div class='line' id='LC21'><span class="kd">function</span> <span class="nx">sb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">ia</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">?</span><span class="mi">2</span><span class="o">:</span><span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="k">new</span> <span class="nx">D</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="nx">R</span><span class="p">(</span><span class="nx">c</span><span class="p">)),</span><span class="nx">f</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="nx">R</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="o">-</span><span class="nx">d</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">));</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">;</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">next</span><span class="p">;</span><span class="k">return</span> <span class="nx">ta</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]})};</span><span class="nx">g</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">n</span><span class="p">};</span><span class="nx">m</span><span class="o">=</span><span class="nx">S</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="nx">B</span><span class="p">);</span><span class="nx">n</span><span class="o">=</span><span class="nx">p</span><span class="p">;</span><span class="k">return</span> <span class="nx">R</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">n</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">-=</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="o">===</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">])</span><span class="nx">e</span><span class="p">.</span><span class="nx">splice</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">e</span><span class="p">,[</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="p">).</span><span class="nx">concat</span><span class="p">([</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">]]))),</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="o">-</span><span class="nx">a</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">g</span><span class="p">];</span><span class="nx">e</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="p">;</span><span class="nx">n</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="k">return</span> <span class="nx">kb</span><span class="p">([</span><span class="nx">ta</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]})])}},</span></div><div class='line' id='LC22'><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">});</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">tb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="o">!</span><span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="o">||</span><span class="s2">&quot;object&quot;</span><span class="o">!==</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="o">:</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="nx">r</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">tb</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">eb</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">eb</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="o">||</span><span class="s2">&quot;object&quot;</span><span class="o">!==</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="o">:</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="nx">r</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">tb</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]))}}</span></div><div class='line' id='LC23'><span class="kd">function</span> <span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">O</span><span class="p">)</span><span class="k">return</span> <span class="nx">Q</span><span class="p">(</span><span class="nx">kb</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="nx">Fa</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">mb</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="nx">Xa</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">ka</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">TypeError</span><span class="p">)}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.toArray&quot;</span><span class="p">,</span><span class="nx">Q</span><span class="p">);</span><span class="kd">function</span> <span class="nx">ub</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">])});</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">Ta</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="nx">b</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">next</span><span class="p">();</span><span class="k">return</span><span class="p">[</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]]};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">kb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">O</span><span class="p">)</span><span class="k">return</span> <span class="nx">kb</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">adj</span><span class="p">);</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">mb</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">return</span> <span class="nx">Ta</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span></div><div class='line' id='LC24'><span class="kd">function</span> <span class="nx">S</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">Ha</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">a</span><span class="o">=</span><span class="nx">Ta</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;Not implemented&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">TypeError</span><span class="p">)},</span><span class="nx">c</span><span class="p">}</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">c</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">do</span> <span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">;</span><span class="k">do</span> <span class="nx">a</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">next</span><span class="p">(),</span><span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">](</span><span class="nx">a</span><span class="p">));</span><span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">mb</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">===</span><span class="nx">g</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">;</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">f</span><span class="o">+=</span><span class="mi">1</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">!==</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="o">?</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">f</span><span class="o">-=</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">h</span><span class="p">(</span><span class="nx">c</span><span class="p">)}</span><span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">)};</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.sentinelIterator&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Ya</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="k">return</span> <span class="nx">c</span><span class="p">});</span></div><div class='line' id='LC25'><span class="kd">function</span> <span class="nx">ob</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;object&quot;</span><span class="o">!==</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">||</span><span class="nx">a</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nb">window</span><span class="p">)</span><span class="k">return</span> <span class="nx">p</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">constructor</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;constructor&quot;</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="s2">&quot;isPrototypeOf&quot;</span><span class="p">))</span><span class="k">return</span> <span class="nx">p</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">p</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="o">===</span><span class="nx">aa</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)}</span></div><div class='line' id='LC26'><span class="kd">function</span> <span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">ob</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;array&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">wa</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">===</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]});</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">!==</span><span class="nx">l</span><span class="p">)</span><span class="k">return</span> <span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">N</span><span class="p">)</span><span class="k">return</span> <span class="nx">d</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">N</span><span class="p">()],</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;array&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">?</span><span class="p">[]</span><span class="o">:</span><span class="p">{};</span><span class="nx">d</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">];</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">vb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(){}</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{},</span><span class="nx">d</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="nx">c</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">c</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">var</span> <span class="nx">xb</span><span class="o">=</span><span class="kd">function</span> <span class="nx">wb</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">wb</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">%</span><span class="nx">c</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">yb</span><span class="p">,</span><span class="nx">zb</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="nx">Ab</span><span class="o">=</span><span class="s2">&quot;add_node add_nodes_from add_edge add_edges_from remove_node remove_nodes_from remove_edge remove_edges_from clear&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span></div><div class='line' id='LC27'><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.draw&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(){</span><span class="nx">ya</span><span class="p">.</span><span class="nx">h</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;transform&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="s2">&quot;translate(&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="s2">&quot;)scale(&quot;</span><span class="p">,</span><span class="nx">ha</span><span class="p">,</span><span class="s2">&quot;)&quot;</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)});</span><span class="nx">hc</span><span class="p">()}</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">l</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="nx">zb</span><span class="o">||</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">d3</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">d3</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">{};</span><span class="nx">tb</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">Bb</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">zb</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">e</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;D3 requried for draw()&quot;</span><span class="p">));</span><span class="nx">f</span><span class="p">.</span><span class="nx">element</span><span class="o">==</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">yb</span><span class="o">==</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Output element required for draw()&quot;</span><span class="p">));</span><span class="nx">yb</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;element&quot;</span><span class="p">,</span><span class="nx">yb</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="nx">yb</span><span class="p">).</span><span class="nx">select</span><span class="p">(</span><span class="s2">&quot;svg.jsnx&quot;</span><span class="p">).</span><span class="nx">remove</span><span class="p">();</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="nx">yb</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;svg&quot;</span><span class="p">).</span><span class="nx">classed</span><span class="p">(</span><span class="s2">&quot;jsnx&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;pointer-events&quot;</span><span class="p">,</span><span class="s2">&quot;all&quot;</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;g&quot;</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;g&quot;</span><span class="p">).</span><span class="nx">classed</span><span class="p">(</span><span class="s2">&quot;edges&quot;</span><span class="p">,</span></div><div class='line' id='LC28'><span class="nx">k</span><span class="p">).</span><span class="nx">selectAll</span><span class="p">(</span><span class="s2">&quot;g.edge&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;g&quot;</span><span class="p">).</span><span class="nx">classed</span><span class="p">(</span><span class="s2">&quot;nodes&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">).</span><span class="nx">selectAll</span><span class="p">(</span><span class="s2">&quot;g.node&quot;</span><span class="p">),</span><span class="nx">y</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">layout</span><span class="p">.</span><span class="nx">force</span><span class="p">(),</span><span class="nx">C</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">width</span><span class="o">||</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">N</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">height</span><span class="o">||</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">Ja</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">layout_attr</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">nodelist</span><span class="o">||</span><span class="nx">l</span><span class="p">,</span><span class="nx">ca</span><span class="p">,</span><span class="nx">da</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="nx">Ca</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">(),</span><span class="nx">za</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">weighted</span><span class="p">,</span><span class="nx">ya</span><span class="o">=</span><span class="p">{</span><span class="nx">h</span><span class="o">:</span><span class="nx">x</span><span class="p">,</span><span class="nx">i</span><span class="o">:</span><span class="nx">b</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">with_labels</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Da</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">labels</span><span class="p">;</span><span class="nx">ca</span><span class="o">=</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="nx">r</span><span class="p">(</span><span class="nx">Da</span><span class="p">)</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="nx">Da</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="o">:</span><span class="nx">ja</span><span class="p">(</span><span class="nx">Da</span><span class="p">)</span><span class="o">?</span><span class="nx">Da</span><span class="o">:</span><span class="nx">u</span><span class="p">(</span><span class="nx">Da</span><span class="p">)</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">Da</span><span class="p">]}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">}}</span><span class="nx">f</span><span class="p">.</span><span class="nx">labels</span><span class="o">=</span><span class="nx">ca</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">za</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Ka</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">weights</span><span class="p">;</span><span class="nx">Y</span><span class="o">=</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="nx">r</span><span class="p">(</span><span class="nx">Ka</span><span class="p">)</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="nx">Ka</span><span class="p">,</span></div><div class='line' id='LC29'><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="mi">1</span><span class="p">)}</span><span class="o">:</span><span class="nx">ja</span><span class="p">(</span><span class="nx">Ka</span><span class="p">)</span><span class="o">?</span><span class="nx">Ka</span><span class="o">:</span><span class="nx">u</span><span class="p">(</span><span class="nx">Ka</span><span class="p">)</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">Ka</span><span class="p">,</span><span class="mi">1</span><span class="p">)}</span><span class="o">:</span><span class="nx">ba</span><span class="p">(</span><span class="mi">1</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">with_edge_labels</span><span class="p">){</span><span class="kd">var</span> <span class="nx">La</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">edge_labels</span><span class="p">;</span><span class="nx">da</span><span class="o">=</span><span class="nx">za</span><span class="o">&amp;&amp;!</span><span class="nx">s</span><span class="p">(</span><span class="nx">La</span><span class="p">)</span><span class="o">?</span><span class="nx">Y</span><span class="o">:</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="nx">r</span><span class="p">(</span><span class="nx">La</span><span class="p">)</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="nx">Da</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="o">:</span><span class="nx">ja</span><span class="p">(</span><span class="nx">La</span><span class="p">)</span><span class="o">?</span><span class="nx">La</span><span class="o">:</span><span class="nx">u</span><span class="p">(</span><span class="nx">La</span><span class="p">)</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">La</span><span class="p">]}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">edge</span><span class="p">};</span><span class="nx">f</span><span class="p">.</span><span class="nx">edge_labels</span><span class="o">=</span><span class="nx">da</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">za</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">weighted_stroke</span><span class="p">){</span><span class="kd">var</span> <span class="nx">za</span><span class="o">=</span><span class="nx">Va</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">Y</span><span class="p">({</span><span class="nx">data</span><span class="o">:</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]});</span><span class="k">return</span> <span class="nx">a</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">b</span><span class="p">},</span><span class="mi">0</span><span class="p">),</span><span class="nx">Nd</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">linear</span><span class="p">().</span><span class="nx">range</span><span class="p">([</span><span class="mi">2</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">edge_style</span><span class="p">[</span><span class="s2">&quot;stroke-width&quot;</span><span class="p">]]).</span><span class="nx">domain</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="nx">za</span><span class="p">]);</span><span class="nx">f</span><span class="p">.</span><span class="nx">edge_style</span><span class="p">[</span><span class="s2">&quot;stroke-width&quot;</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">Nd</span><span class="p">(</span><span class="nx">Y</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span></div><div class='line' id='LC30'><span class="nx">a</span><span class="p">))}}</span><span class="nx">m</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s2">&quot;svg.jsnx&quot;</span><span class="p">).</span><span class="nx">remove</span><span class="p">();</span><span class="nx">m</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">,</span><span class="nx">C</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="nx">N</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">).</span><span class="nx">style</span><span class="p">(</span><span class="s2">&quot;opacity&quot;</span><span class="p">,</span><span class="mi">1</span><span class="nx">E</span><span class="o">-</span><span class="mi">6</span><span class="p">).</span><span class="nx">transition</span><span class="p">().</span><span class="nx">duration</span><span class="p">(</span><span class="mi">1</span><span class="nx">E3</span><span class="p">).</span><span class="nx">style</span><span class="p">(</span><span class="s2">&quot;opacity&quot;</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="kd">var</span> <span class="nx">Od</span><span class="o">=</span><span class="p">{</span><span class="nx">size</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">nodes</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">links</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">start</span><span class="o">:</span><span class="nx">k</span><span class="p">};</span><span class="nx">M</span><span class="p">(</span><span class="nx">Ja</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">Od</span><span class="p">))</span><span class="nx">y</span><span class="p">[</span><span class="nx">a</span><span class="p">](</span><span class="nx">Ja</span><span class="p">[</span><span class="nx">a</span><span class="p">])});</span><span class="nx">y</span><span class="p">.</span><span class="nx">nodes</span><span class="p">([]).</span><span class="nx">links</span><span class="p">([]).</span><span class="nx">size</span><span class="p">([</span><span class="nx">C</span><span class="p">,</span><span class="nx">N</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">Sa</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">ha</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">pan_zoom</span><span class="p">.</span><span class="nx">enabled</span><span class="p">){</span><span class="kd">var</span> <span class="nx">ic</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">pan_zoom</span><span class="p">.</span><span class="nx">scale</span><span class="p">;(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">p</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">Sa</span><span class="p">;</span><span class="nx">m</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">behavior</span><span class="p">.</span><span class="nx">zoom</span><span class="p">().</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;zoom&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">sourceEvent</span><span class="p">.</span><span class="nx">shiftKey</span><span class="p">;(</span><span class="nx">f</span><span class="o">=</span><span class="nx">ic</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">||!</span><span class="p">(</span><span class="nx">ic</span><span class="o">||</span><span class="nx">f</span><span class="p">))</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">scale</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">Sa</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">k</span><span class="p">)</span><span class="o">:!</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">p</span><span class="p">);</span></div><div class='line' id='LC31'><span class="nx">Sa</span><span class="o">=</span><span class="nx">f</span><span class="o">?</span><span class="nx">c</span><span class="o">*</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">scale</span><span class="o">/</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">Sa</span><span class="p">;</span><span class="nx">ha</span><span class="o">=!</span><span class="nx">f</span><span class="o">?</span><span class="nx">Sa</span><span class="o">/</span><span class="nx">e</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">scale</span><span class="o">:</span><span class="nx">ha</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">translate</span><span class="p">;</span><span class="nx">n</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;transform&quot;</span><span class="p">,</span><span class="s2">&quot;translate(&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;)scale(&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">scale</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">()}))})()}</span><span class="kd">var</span> <span class="nx">hc</span><span class="o">=</span><span class="nx">fa</span><span class="p">,</span><span class="nx">Ea</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">edge_offset</span><span class="p">,</span><span class="nx">hb</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">node_attr</span><span class="p">.</span><span class="nx">r</span><span class="p">,</span><span class="nx">ib</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">node_style</span><span class="p">[</span><span class="s2">&quot;stroke-width&quot;</span><span class="p">];</span><span class="s2">&quot;circle&quot;</span><span class="o">===</span><span class="nx">f</span><span class="p">.</span><span class="nx">node_shape</span><span class="o">?</span><span class="p">(</span><span class="nx">ja</span><span class="p">(</span><span class="nx">hb</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">hb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">node_attr</span><span class="p">.</span><span class="nx">r</span><span class="p">}),</span><span class="nx">ja</span><span class="p">(</span><span class="nx">ib</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">ib</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">node_style</span><span class="p">[</span><span class="s2">&quot;stroke-width&quot;</span><span class="p">]}),</span><span class="nx">Ea</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">hb</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">source</span><span class="p">)</span><span class="o">+</span><span class="nx">ib</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">source</span><span class="p">),</span><span class="nx">hb</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">)</span><span class="o">+</span><span class="nx">ib</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">)]})</span><span class="o">:</span><span class="p">(</span><span class="nx">ga</span><span class="p">(</span><span class="nx">Ea</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">Ea</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">edge_offset</span><span class="p">}),</span><span class="nx">ia</span><span class="p">(</span><span class="nx">Ea</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">Ea</span><span class="o">=</span></div><div class='line' id='LC32'><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">[</span><span class="nx">f</span><span class="p">.</span><span class="nx">edge_offset</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">edge_offset</span><span class="p">]}));</span><span class="kd">var</span> <span class="nx">Ma</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">edge_style</span><span class="p">[</span><span class="s2">&quot;stroke-width&quot;</span><span class="p">];</span><span class="nx">ja</span><span class="p">(</span><span class="nx">Ma</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">Ma</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">edge_style</span><span class="p">[</span><span class="s2">&quot;stroke-width&quot;</span><span class="p">]});</span><span class="kd">var</span> <span class="nx">jb</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">edge_label_offset</span><span class="p">,</span><span class="nx">hc</span><span class="o">=</span><span class="nx">Ca</span><span class="o">?</span><span class="kd">function</span><span class="p">(){</span><span class="nx">ya</span><span class="p">.</span><span class="nx">i</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">source</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">source</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">source</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">ka</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">f</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">g</span><span class="o">-</span><span class="nx">d</span><span class="p">,</span><span class="mi">2</span><span class="p">)),</span><span class="nx">g</span><span class="o">=</span><span class="nx">Ea</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="p">[</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">ha</span><span class="p">,</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">ha</span><span class="p">];</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;transform&quot;</span><span class="p">,[</span><span class="s2">&quot;translate(&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;)rotate(&quot;</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="s2">&quot;)&quot;</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">));</span><span class="nx">c</span><span class="o">=</span><span class="nx">Ma</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">*</span><span class="nx">ha</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="o">-</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">c</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">c</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s2">&quot;.line&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;d&quot;</span><span class="p">,</span></div><div class='line' id='LC33'><span class="p">[</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="o">-</span><span class="nx">m</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="o">-</span><span class="nx">m</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">-</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;z&quot;</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">));</span><span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="o">/</span><span class="nx">ha</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s2">&quot;text&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;x&quot;</span><span class="p">,</span><span class="nx">jb</span><span class="p">.</span><span class="nx">x</span><span class="o">*</span><span class="nx">c</span><span class="o">+</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="p">(</span><span class="nx">f</span><span class="o">*</span><span class="nx">c</span><span class="o">-</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">/</span><span class="mi">2</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;y&quot;</span><span class="p">,</span><span class="o">-</span><span class="nx">Ma</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="o">+-</span><span class="nx">jb</span><span class="p">.</span><span class="nx">y</span><span class="o">*</span><span class="nx">c</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;transform&quot;</span><span class="p">,</span><span class="s2">&quot;scale(&quot;</span><span class="o">+</span><span class="nx">ha</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">)}})}</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">ya</span><span class="p">.</span><span class="nx">i</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">source</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">source</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">source</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">ka</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">m</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">g</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">m</span><span class="o">-</span><span class="nx">d</span><span class="p">,</span><span class="mi">2</span><span class="p">)),</span><span class="nx">m</span><span class="o">=</span><span class="nx">g</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nx">Ea</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">x</span><span class="o">=</span><span class="p">[</span><span class="nx">x</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">ha</span><span class="p">,</span><span class="nx">x</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">ha</span><span class="p">],</span><span class="nx">y</span><span class="o">=</span><span class="mi">1</span><span class="o">/</span><span class="nx">ha</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="nx">Ma</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">*</span><span class="nx">ha</span><span class="p">,</span><span class="nx">N</span><span class="o">=</span><span class="mi">90</span><span class="o">&lt;</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="mi">279</span><span class="o">&gt;</span><span class="nx">n</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;transform&quot;</span><span class="p">,[</span><span class="s2">&quot;translate(&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;)rotate(&quot;</span><span class="p">,</span></div><div class='line' id='LC34'><span class="nx">n</span><span class="p">,</span><span class="s2">&quot;)&quot;</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">));</span><span class="nx">b</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s2">&quot;.line&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;d&quot;</span><span class="p">,[</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">x</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">C</span><span class="o">/</span><span class="mi">4</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">x</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="o">-</span><span class="nx">C</span><span class="o">/</span><span class="mi">4</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">g</span><span class="o">-</span><span class="nx">x</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="o">-</span><span class="nx">C</span><span class="o">/</span><span class="mi">4</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">g</span><span class="o">-</span><span class="nx">x</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">C</span><span class="o">/</span><span class="mi">4</span><span class="p">,</span><span class="s2">&quot;z&quot;</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">));</span><span class="nx">f</span><span class="p">.</span><span class="nx">with_edge_labels</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s2">&quot;text&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;x&quot;</span><span class="p">,(</span><span class="nx">N</span><span class="o">?</span><span class="mi">1</span><span class="o">:-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">jb</span><span class="p">.</span><span class="nx">x</span><span class="o">*</span><span class="nx">y</span><span class="o">+</span><span class="nx">x</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="p">(</span><span class="nx">g</span><span class="o">*</span><span class="nx">y</span><span class="o">-</span><span class="nx">x</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">x</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">/</span><span class="mi">2</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;y&quot;</span><span class="p">,</span><span class="o">-</span><span class="nx">Ma</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">/</span><span class="mi">4</span><span class="o">+-</span><span class="nx">jb</span><span class="p">.</span><span class="nx">y</span><span class="o">*</span><span class="nx">y</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;transform&quot;</span><span class="p">,</span><span class="s2">&quot;scale(&quot;</span><span class="o">+</span><span class="nx">ha</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">N</span><span class="o">?</span><span class="s2">&quot;rotate(180,&quot;</span><span class="o">+</span><span class="nx">m</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="nx">ha</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;,0)&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">))}})};</span><span class="nx">y</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;tick&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">C</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">A</span><span class="p">();</span><span class="nx">N</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">();</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">p</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">N</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">(</span><span class="nx">g</span><span class="p">));</span><span class="nx">ya</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">Cb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">node_shape</span><span class="p">,</span><span class="nx">ca</span><span class="p">);</span><span class="nx">ya</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="nx">Db</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">N</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">da</span><span class="p">);</span><span class="nx">Eb</span><span class="p">(</span><span class="nx">ya</span><span class="p">.</span><span class="nx">h</span><span class="p">,{</span><span class="nx">attr</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">node_attr</span><span class="p">,</span><span class="nx">style</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">node_style</span><span class="p">,</span><span class="nx">X</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">label_style</span><span class="p">,</span><span class="nx">W</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">label_attr</span><span class="p">},</span><span class="nx">f</span><span class="p">.</span><span class="nx">with_labels</span><span class="p">);</span></div><div class='line' id='LC35'><span class="nx">Fb</span><span class="p">(</span><span class="nx">ya</span><span class="p">.</span><span class="nx">i</span><span class="p">,{</span><span class="nx">attr</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">edge_attr</span><span class="p">,</span><span class="nx">style</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">edge_style</span><span class="p">,</span><span class="nx">X</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">edge_label_style</span><span class="p">,</span><span class="nx">W</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">edge_label_attr</span><span class="p">},</span><span class="nx">f</span><span class="p">.</span><span class="nx">with_edge_labels</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">Ca</span><span class="p">);</span><span class="nx">c</span><span class="o">?</span><span class="nx">Gb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">ya</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">bound</span><span class="o">?</span><span class="nx">Hb</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">Ib</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">y</span><span class="p">.</span><span class="nx">start</span><span class="p">();</span><span class="k">return</span> <span class="nx">y</span><span class="p">});</span><span class="kd">function</span> <span class="nx">Cb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodes</span><span class="p">();</span><span class="nx">M</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">node</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">G</span><span class="o">:</span><span class="nx">a</span><span class="p">};</span><span class="nx">g</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">__d3datum__</span><span class="o">=</span><span class="nx">b</span><span class="p">});</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">Jb</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">enter</span><span class="p">().</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;g&quot;</span><span class="p">).</span><span class="nx">classed</span><span class="p">(</span><span class="s2">&quot;node&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">).</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">drag</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">classed</span><span class="p">(</span><span class="s2">&quot;node-shape&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">);</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;text&quot;</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span></div><div class='line' id='LC36'><span class="kd">function</span> <span class="nx">Db</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">links</span><span class="p">();</span><span class="nx">M</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">T</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">edge</span><span class="o">:</span><span class="p">[</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">],</span><span class="nx">redge</span><span class="o">:</span><span class="p">[</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">],</span><span class="nx">source</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">__d3datum__</span><span class="p">,</span><span class="nx">target</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">__d3datum__</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">G</span><span class="o">:</span><span class="nx">a</span><span class="p">};</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">__d3datum__</span><span class="o">=</span><span class="nx">c</span><span class="p">});</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">Kb</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">enter</span><span class="p">().</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;g&quot;</span><span class="p">).</span><span class="nx">classed</span><span class="p">(</span><span class="s2">&quot;edge&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;path&quot;</span><span class="p">).</span><span class="nx">classed</span><span class="p">(</span><span class="s2">&quot;line&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">);</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;text&quot;</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span></div><div class='line' id='LC37'><span class="kd">function</span> <span class="nx">Eb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">!=</span><span class="nx">l</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">{};</span><span class="nx">M</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="p">[</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">});</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">node</span> <span class="k">in</span> <span class="nx">e</span><span class="p">})}</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectAll</span><span class="p">(</span><span class="s2">&quot;.node-shape&quot;</span><span class="p">);</span><span class="nx">F</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)});</span><span class="nx">F</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)});</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectAll</span><span class="p">(</span><span class="s2">&quot;text&quot;</span><span class="p">);</span><span class="nx">F</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">W</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">g</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)});</span><span class="nx">F</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">X</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)})}}</span></div><div class='line' id='LC38'><span class="kd">function</span> <span class="nx">Fb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">!=</span><span class="nx">l</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">{};</span><span class="nx">M</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="p">[[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]]]</span><span class="o">=</span><span class="nx">k</span><span class="p">});</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">edge</span> <span class="k">in</span> <span class="nx">f</span><span class="o">||</span><span class="nx">e</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">redge</span> <span class="k">in</span> <span class="nx">f</span><span class="p">})}</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectAll</span><span class="p">(</span><span class="s2">&quot;.line&quot;</span><span class="p">);</span><span class="nx">F</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">g</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)});</span><span class="nx">F</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">!=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)});</span><span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="s2">&quot;stroke-width&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectAll</span><span class="p">(</span><span class="s2">&quot;text&quot;</span><span class="p">);</span><span class="nx">F</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">W</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">m</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)});</span><span class="nx">F</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">X</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">m</span><span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)})}}</span><span class="kd">function</span> <span class="nx">Jb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Kb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">edge</span><span class="p">}</span></div><div class='line' id='LC39'><span class="kd">function</span> <span class="nx">Lb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodes</span><span class="p">();</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">Aa</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">__d3datum__</span><span class="p">)});</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">Jb</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">exit</span><span class="p">().</span><span class="nx">remove</span><span class="p">();</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Mb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">links</span><span class="p">();</span><span class="nx">M</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">Aa</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">T</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">],{}),</span><span class="s2">&quot;__d3datum__&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">))});</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">Kb</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">exit</span><span class="p">().</span><span class="nx">remove</span><span class="p">();</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span></div><div class='line' id='LC40'><span class="kd">function</span> <span class="nx">Gb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">Hb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">p</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">node_shape</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="nx">attr</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">node_attr</span><span class="p">,</span><span class="nx">style</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">node_style</span><span class="p">,</span><span class="nx">W</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">label_attr</span><span class="p">,</span><span class="nx">X</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">label_style</span><span class="p">},</span><span class="nx">m</span><span class="o">=</span><span class="p">{</span><span class="nx">attr</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">edge_attr</span><span class="p">,</span><span class="nx">style</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">edge_style</span><span class="p">,</span><span class="nx">W</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">edge_label_attr</span><span class="p">,</span><span class="nx">X</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">edge_label_style</span><span class="p">},</span><span class="nx">n</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">labels</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">edge_labels</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">with_labels</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">with_edge_labels</span><span class="p">,</span><span class="nx">N</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">add_node</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">I</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=!</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">add_node</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">Cb</span><span class="p">(</span><span class="k">this</span><span class="p">,[</span><span class="nx">a</span><span class="p">],</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">n</span><span class="p">));</span><span class="nx">Eb</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">y</span><span class="p">,[</span><span class="nx">a</span><span class="p">]);</span><span class="nx">b</span><span class="p">.</span><span class="nx">start</span><span class="p">()};</span><span class="nx">a</span><span class="p">.</span><span class="nx">add_nodes_from</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">sa</span><span class="p">(</span><span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="p">(</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span></div><div class='line' id='LC41'><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">add_nodes_from</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">Cb</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">n</span><span class="p">));</span><span class="nx">Eb</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">start</span><span class="p">()};</span><span class="nx">a</span><span class="p">.</span><span class="nx">add_edge</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">ca</span><span class="p">){</span><span class="kd">var</span> <span class="nx">da</span><span class="o">=!</span><span class="k">this</span><span class="p">.</span><span class="nx">O</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">ca</span><span class="p">),</span><span class="nx">Y</span><span class="o">=</span><span class="p">[];</span><span class="nx">da</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">Y</span><span class="o">=</span><span class="nx">sa</span><span class="p">(</span><span class="nx">c</span><span class="o">==</span><span class="nx">ca</span><span class="o">?</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">:</span><span class="p">[</span><span class="nx">c</span><span class="p">,</span><span class="nx">ca</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="k">this</span><span class="p">));</span><span class="nx">e</span><span class="p">.</span><span class="nx">add_edge</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">Y</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">Cb</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="nx">Eb</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">Y</span><span class="p">));</span><span class="nx">da</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="nx">Db</span><span class="p">(</span><span class="k">this</span><span class="p">,[[</span><span class="nx">c</span><span class="p">,</span><span class="nx">ca</span><span class="p">]],</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">i</span><span class="p">,</span><span class="nx">x</span><span class="p">));</span><span class="nx">Fb</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">i</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">C</span><span class="p">,[[</span><span class="nx">c</span><span class="p">,</span><span class="nx">ca</span><span class="p">]],</span><span class="nx">N</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">start</span><span class="p">()};</span><span class="nx">a</span><span class="p">.</span><span class="nx">add_edges_from</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">N</span><span class="o">=</span><span class="p">[],</span><span class="nx">da</span><span class="o">=</span><span class="p">[],</span><span class="nx">Y</span><span class="o">=</span><span class="p">{},</span><span class="nx">Ca</span><span class="o">=</span><span class="p">{},</span><span class="nx">za</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">();</span><span class="nx">M</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">O</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span></div><div class='line' id='LC42'><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="p">([</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">]</span><span class="k">in</span> <span class="nx">Y</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">za</span><span class="o">||!</span><span class="p">([</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">]</span><span class="k">in</span> <span class="nx">Y</span><span class="p">)))</span><span class="nx">N</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">]),</span><span class="nx">Y</span><span class="p">[[</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">]]</span><span class="o">=</span><span class="nx">k</span><span class="p">,</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">Ca</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">da</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">Ca</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">),</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">Ca</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">da</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">Ca</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">add_edges_from</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">da</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">Cb</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">da</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="nx">Eb</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">da</span><span class="p">));</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">N</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="nx">Db</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">N</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">i</span><span class="p">,</span><span class="nx">x</span><span class="p">));</span><span class="nx">Fb</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">i</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">N</span><span class="p">,</span><span class="nx">za</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">start</span><span class="p">()};</span><span class="nx">a</span><span class="p">.</span><span class="nx">remove_node</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">R</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="p">(</span><span class="nx">c</span><span class="p">)){</span><span class="nx">d</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">Lb</span><span class="p">(</span><span class="k">this</span><span class="p">,[</span><span class="nx">c</span><span class="p">],</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">h</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">([</span><span class="nx">c</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">Wa</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">J</span><span class="p">([</span><span class="nx">c</span><span class="p">])));</span><span class="nx">d</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="nx">Mb</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">i</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">resume</span><span class="p">()}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">g</span><span class="p">){}</span><span class="nx">e</span><span class="p">.</span><span class="nx">remove_node</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC43'><span class="nx">arguments</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">remove_nodes_from</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">$</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">d</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">Lb</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">h</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">Wa</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">J</span><span class="p">(</span><span class="nx">c</span><span class="p">)));</span><span class="nx">d</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="nx">Mb</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">i</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">resume</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">g</span><span class="p">){}</span><span class="nx">e</span><span class="p">.</span><span class="nx">remove_nodes_from</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">remove_edge</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">w</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">d</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="nx">Mb</span><span class="p">(</span><span class="k">this</span><span class="p">,[[</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">]],</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">i</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">resume</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">g</span><span class="p">){}</span><span class="nx">e</span><span class="p">.</span><span class="nx">remove_edge</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">remove_edges_from</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">F</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">d</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="nx">Mb</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">i</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">resume</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">f</span><span class="p">){}</span><span class="nx">e</span><span class="p">.</span><span class="nx">remove_edges_from</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">h</span><span class="p">.</span><span class="nx">data</span><span class="p">([],</span><span class="nx">Jb</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">h</span><span class="p">.</span><span class="nx">exit</span><span class="p">().</span><span class="nx">remove</span><span class="p">();</span></div><div class='line' id='LC44'><span class="nx">d</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">i</span><span class="p">.</span><span class="nx">data</span><span class="p">([],</span><span class="nx">Kb</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">i</span><span class="p">.</span><span class="nx">exit</span><span class="p">().</span><span class="nx">remove</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodes</span><span class="p">([]).</span><span class="nx">links</span><span class="p">([]).</span><span class="nx">resume</span><span class="p">();</span><span class="nx">e</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">bound</span><span class="o">=</span><span class="nx">k</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.is_bound&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">bound</span><span class="p">});</span><span class="kd">function</span> <span class="nx">Hb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">bound</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">A</span><span class="p">(</span><span class="nx">Ab</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">]});</span><span class="k">delete</span> <span class="nx">a</span><span class="p">.</span><span class="nx">bound</span><span class="p">;(</span><span class="o">!</span><span class="nx">s</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">Ib</span><span class="p">(</span><span class="nx">a</span><span class="p">)}}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.unbind&quot;</span><span class="p">,</span><span class="nx">Hb</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Ib</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">A</span><span class="p">(</span><span class="nx">k</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="s2">&quot;__d3datum__&quot;</span><span class="p">)});</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="s2">&quot;__d3datum__&quot;</span><span class="p">)})}</span></div><div class='line' id='LC45'><span class="kd">var</span> <span class="nx">Bb</span><span class="o">=</span><span class="p">{</span><span class="nx">layout_attr</span><span class="o">:</span><span class="p">{</span><span class="nx">charge</span><span class="o">:-</span><span class="mi">120</span><span class="p">,</span><span class="nx">linkDistance</span><span class="o">:</span><span class="mi">60</span><span class="p">},</span><span class="nx">node_shape</span><span class="o">:</span><span class="s2">&quot;circle&quot;</span><span class="p">,</span><span class="nx">node_attr</span><span class="o">:</span><span class="p">{</span><span class="nx">r</span><span class="o">:</span><span class="mi">10</span><span class="p">},</span><span class="nx">node_style</span><span class="o">:</span><span class="p">{</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">stroke</span><span class="o">:</span><span class="s2">&quot;#333&quot;</span><span class="p">,</span><span class="nx">fill</span><span class="o">:</span><span class="s2">&quot;#999&quot;</span><span class="p">,</span><span class="nx">cursor</span><span class="o">:</span><span class="s2">&quot;pointer&quot;</span><span class="p">},</span><span class="nx">edge_attr</span><span class="o">:</span><span class="p">{},</span><span class="nx">edge_style</span><span class="o">:</span><span class="p">{</span><span class="nx">fill</span><span class="o">:</span><span class="s2">&quot;#000&quot;</span><span class="p">,</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">:</span><span class="mi">3</span><span class="p">},</span><span class="nx">label_attr</span><span class="o">:</span><span class="p">{},</span><span class="nx">label_style</span><span class="o">:</span><span class="p">{</span><span class="s2">&quot;text-anchor&quot;</span><span class="o">:</span><span class="s2">&quot;middle&quot;</span><span class="p">,</span><span class="s2">&quot;dominant-baseline&quot;</span><span class="o">:</span><span class="s2">&quot;central&quot;</span><span class="p">,</span><span class="nx">cursor</span><span class="o">:</span><span class="s2">&quot;pointer&quot;</span><span class="p">,</span><span class="s2">&quot;-webkit-user-select&quot;</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="nx">fill</span><span class="o">:</span><span class="s2">&quot;#000&quot;</span><span class="p">},</span><span class="nx">edge_label_attr</span><span class="o">:</span><span class="p">{},</span><span class="nx">edge_label_style</span><span class="o">:</span><span class="p">{</span><span class="s2">&quot;font-size&quot;</span><span class="o">:</span><span class="s2">&quot;0.8em&quot;</span><span class="p">,</span><span class="s2">&quot;text-anchor&quot;</span><span class="o">:</span><span class="s2">&quot;middle&quot;</span><span class="p">,</span><span class="s2">&quot;-webkit-user-select&quot;</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">},</span><span class="nx">edge_label_offset</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mf">0.5</span><span class="p">},</span><span class="nx">with_labels</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span></div><div class='line' id='LC46'><span class="nx">with_edge_labels</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">edge_offset</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">weighted</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">weights</span><span class="o">:</span><span class="s2">&quot;weight&quot;</span><span class="p">,</span><span class="nx">weighted_stroke</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">pan_zoom</span><span class="o">:</span><span class="p">{</span><span class="nx">enabled</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">scale</span><span class="o">:</span><span class="nx">k</span><span class="p">}};</span><span class="kd">function</span> <span class="nx">Nb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">z</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">z</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="k">return</span> <span class="nx">ab</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Ob</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">o</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">%</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Uneven number of arguments&quot;</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="o">+=</span><span class="mi">2</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">])}</span><span class="k">else</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">ea</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="nx">q</span><span class="o">=</span><span class="nx">Ob</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">q</span><span class="p">.</span><span class="nx">C</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">q</span><span class="p">.</span><span class="nx">ba</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">q</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">C</span><span class="p">};</span><span class="nx">q</span><span class="p">.</span><span class="nx">z</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">Pb</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[],</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">o</span><span class="p">[</span><span class="nx">b</span><span class="p">]]);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">q</span><span class="p">.</span><span class="nx">fa</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">Pb</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">o</span><span class="p">.</span><span class="nx">concat</span><span class="p">()};</span><span class="nx">q</span><span class="p">.</span><span class="nx">la</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="nx">q</span><span class="p">.</span><span class="nx">K</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="mi">0</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">C</span><span class="p">};</span></div><div class='line' id='LC47'><span class="nx">q</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">ba</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">C</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">};</span><span class="nx">q</span><span class="p">.</span><span class="nx">remove</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">C</span><span class="o">--</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ba</span><span class="o">++</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">C</span><span class="o">&amp;&amp;</span><span class="nx">Pb</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">k</span><span class="p">)</span><span class="o">:</span><span class="nx">p</span><span class="p">};</span></div><div class='line' id='LC48'><span class="kd">function</span> <span class="nx">Pb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">C</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">o</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">l</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">o</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">);</span><span class="nx">b</span><span class="o">++</span><span class="p">}</span><span class="nx">a</span><span class="p">.</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="nx">c</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">C</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">{},</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="p">;)</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">o</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">o</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="o">++</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="nx">c</span><span class="p">}}</span><span class="nx">q</span><span class="p">.</span><span class="nx">set</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">C</span><span class="o">++</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">o</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">ba</span><span class="o">++</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">};</span></div><div class='line' id='LC49'><span class="nx">q</span><span class="p">.</span><span class="nx">ea</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">Ob</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">fa</span><span class="p">(),</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">z</span><span class="p">())</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">ab</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">])};</span><span class="nx">q</span><span class="p">.</span><span class="nx">N</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Ob</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="nx">q</span><span class="p">.</span><span class="nx">M</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">Pb</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">o</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ba</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(;;){</span><span class="nx">e</span><span class="o">!=</span><span class="nx">f</span><span class="p">.</span><span class="nx">ba</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;The map has changed since the iterator was created&quot;</span><span class="p">));</span><span class="nx">b</span><span class="o">&gt;=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">B</span><span class="p">);</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="o">++</span><span class="p">];</span><span class="k">return</span> <span class="nx">a</span><span class="o">?</span><span class="nx">g</span><span class="o">:</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">]}};</span><span class="k">return</span> <span class="nx">g</span><span class="p">};</span><span class="kd">function</span> <span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="o">=</span><span class="k">new</span> <span class="nx">Ob</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">ea</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Qb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;o&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">la</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">la</span><span class="p">]</span><span class="o">=++</span><span class="nx">ma</span><span class="p">))</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="nx">a</span><span class="p">}</span><span class="nx">q</span><span class="o">=</span><span class="nx">V</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">q</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="p">.</span><span class="nx">f</span><span class="p">()};</span><span class="nx">q</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">Qb</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">)};</span><span class="nx">q</span><span class="p">.</span><span class="nx">ea</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">Nb</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">])};</span><span class="nx">q</span><span class="p">.</span><span class="nx">remove</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">Qb</span><span class="p">(</span><span class="nx">a</span><span class="p">))};</span><span class="nx">q</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="p">.</span><span class="nx">clear</span><span class="p">()};</span><span class="nx">q</span><span class="p">.</span><span class="nx">K</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="p">.</span><span class="nx">K</span><span class="p">()};</span><span class="nx">q</span><span class="p">.</span><span class="nx">contains</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="p">.</span><span class="nx">la</span><span class="p">(</span><span class="nx">Qb</span><span class="p">(</span><span class="nx">a</span><span class="p">))};</span></div><div class='line' id='LC50'><span class="kd">function</span> <span class="nx">Rb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">V</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">Nb</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">f</span><span class="p">)}</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Sb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">N</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="nx">Nb</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">]);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="nx">q</span><span class="p">.</span><span class="nx">z</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="p">.</span><span class="nx">z</span><span class="p">()};</span><span class="nx">q</span><span class="p">.</span><span class="nx">N</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">V</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="nx">q</span><span class="p">.</span><span class="nx">M</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="p">.</span><span class="nx">M</span><span class="p">(</span><span class="nx">p</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">Tb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">h</span><span class="p">(</span><span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Input graph is not a jsnx graph type&quot;</span><span class="p">))}</span><span class="k">else</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">O</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span></div><div class='line' id='LC51'><span class="kd">function</span> <span class="nx">Ub</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&quot;adj&quot;</span><span class="p">))</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">d</span><span class="o">=</span><span class="nx">Vb</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">adj</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">n</span><span class="p">()),</span><span class="s2">&quot;graph&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">graph</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">graph</span><span class="o">=</span><span class="nx">db</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">graph</span><span class="p">)),</span><span class="s2">&quot;node&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">node</span><span class="o">=</span><span class="nx">Za</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">db</span><span class="p">(</span><span class="nx">a</span><span class="p">)})),</span><span class="nx">d</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">h</span><span class="p">(</span><span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Input is not a correct jsnx graph&quot;</span><span class="p">))}</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">Vb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">Wb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="nx">h</span><span class="p">(</span><span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Input is not known type.&quot;</span><span class="p">))}}</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">Xb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">m</span><span class="p">){</span><span class="nx">h</span><span class="p">(</span><span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Input is not valid edge list&quot;</span><span class="p">))}</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span></div><div class='line' id='LC52'><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.convert.to_networkx_graph&quot;</span><span class="p">,</span><span class="nx">Ub</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.to_networkx_graph&quot;</span><span class="p">,</span><span class="nx">Ub</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Yb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">S</span><span class="p">()}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.convert.convert_to_undirected&quot;</span><span class="p">,</span><span class="nx">Yb</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.convert_to_undirected&quot;</span><span class="p">,</span><span class="nx">Yb</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Zb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">H</span><span class="p">()}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.convert.convert_to_directed&quot;</span><span class="p">,</span><span class="nx">Zb</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.convert_to_undirected&quot;</span><span class="p">,</span><span class="nx">Zb</span><span class="p">);</span><span class="kd">function</span> <span class="nx">$b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">&lt;=</span><span class="nx">ra</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">{};</span><span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">b</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="nx">M</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">sa</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">L</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="p">)});</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.convert.to_dict_of_lists&quot;</span><span class="p">,</span><span class="nx">$b</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.to_dict_of_lists&quot;</span><span class="p">,</span><span class="nx">$b</span><span class="p">);</span></div><div class='line' id='LC53'><span class="kd">function</span> <span class="nx">Wb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">Tb</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">n</span><span class="p">()</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">.</span><span class="nx">b</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">{};</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">d</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)});</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">})}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">])})});</span><span class="nx">c</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">e</span><span class="p">)}</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.convert.from_dict_of_lists&quot;</span><span class="p">,</span><span class="nx">Wb</span><span class="p">);</span></div><div class='line' id='LC54'><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.convert.to_dict_of_dicts&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">{};</span><span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">A</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="p">{};</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">ra</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">][</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">)})})</span><span class="o">:</span><span class="nx">A</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="p">{};</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">ra</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">][</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">)})}))</span><span class="o">:</span><span class="nx">c</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">s</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">Za</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">c</span><span class="p">})})</span><span class="o">:</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">s</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">db</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="k">return</span> <span class="nx">d</span><span class="p">});</span></div><div class='line' id='LC55'><span class="kd">function</span> <span class="nx">Vb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">Tb</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">c</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">b</span><span class="p">()</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">n</span><span class="p">()</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nb">Error</span><span class="p">());</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">])})})}))</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nb">Error</span><span class="p">());</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">])})})})),</span><span class="nx">d</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">n</span><span class="p">()</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nx">V</span><span class="p">,</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nb">Error</span><span class="p">());</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">contains</span><span class="p">([</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">].</span><span class="nx">toString</span><span class="p">())</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">])}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">add</span><span class="p">([</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">].</span><span class="nx">toString</span><span class="p">()))})}))</span><span class="o">:</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nx">V</span><span class="p">,</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nb">Error</span><span class="p">());</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC56'><span class="nx">c</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">contains</span><span class="p">([</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">].</span><span class="nx">toString</span><span class="p">())</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">])}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">add</span><span class="p">([</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">].</span><span class="nx">toString</span><span class="p">()))})}))</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">n</span><span class="p">()</span><span class="o">&amp;&amp;!</span><span class="nx">d</span><span class="p">.</span><span class="nx">b</span><span class="p">()</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nx">V</span><span class="p">,</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nb">Error</span><span class="p">());</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">contains</span><span class="p">([</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">].</span><span class="nx">toString</span><span class="p">())</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">add</span><span class="p">([</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">].</span><span class="nx">toString</span><span class="p">()))})}))</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nb">Error</span><span class="p">());</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">])})}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">e</span><span class="p">));</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.convert.from_dict_of_dicts&quot;</span><span class="p">,</span><span class="nx">Vb</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.convert.to_edgelist&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">p</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">k</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">p</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">k</span><span class="p">)});</span></div><div class='line' id='LC57'><span class="kd">function</span> <span class="nx">Xb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">Tb</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.convert.from_edgelist&quot;</span><span class="p">,</span><span class="nx">Xb</span><span class="p">);</span><span class="kd">function</span> <span class="nx">ac</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;JSNetworkXException&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.exception.JSNetworkXException&quot;</span><span class="p">,</span><span class="nx">ac</span><span class="p">);</span><span class="nx">ac</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nb">Error</span><span class="p">();</span><span class="nx">ac</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">constructor</span><span class="o">=</span><span class="nx">ac</span><span class="p">;</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.JSNetworkXException&quot;</span><span class="p">,</span><span class="nx">ac</span><span class="p">);</span><span class="kd">function</span> <span class="nx">W</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">ac</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;JSNetworkXError&quot;</span><span class="p">}</span><span class="nx">qa</span><span class="p">(</span><span class="nx">W</span><span class="p">,</span><span class="nx">ac</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.exception.JSNetworkXError&quot;</span><span class="p">,</span><span class="nx">W</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.JSNetworkXError&quot;</span><span class="p">,</span><span class="nx">W</span><span class="p">);</span><span class="kd">function</span> <span class="nx">bc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">ac</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;JSNetworkXPointlessConcept&quot;</span><span class="p">}</span><span class="nx">qa</span><span class="p">(</span><span class="nx">bc</span><span class="p">,</span><span class="nx">ac</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.exception.JSNetworkXPointlessConcept&quot;</span><span class="p">,</span><span class="nx">bc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.JSNetworkXPointlessConcept&quot;</span><span class="p">,</span><span class="nx">bc</span><span class="p">);</span></div><div class='line' id='LC58'><span class="kd">function</span> <span class="nx">cc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">ac</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;JSNetworkXAlgorithmError&quot;</span><span class="p">}</span><span class="nx">qa</span><span class="p">(</span><span class="nx">cc</span><span class="p">,</span><span class="nx">ac</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.exception.JSNetworkXAlgorithmError&quot;</span><span class="p">,</span><span class="nx">cc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.JSNetworkXAlgorithmError&quot;</span><span class="p">,</span><span class="nx">cc</span><span class="p">);</span><span class="kd">function</span> <span class="nx">dc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">cc</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;JSNetworkXUnfeasible&quot;</span><span class="p">}</span><span class="nx">qa</span><span class="p">(</span><span class="nx">dc</span><span class="p">,</span><span class="nx">cc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.exception.JSNetworkXUnfeasible&quot;</span><span class="p">,</span><span class="nx">dc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.JSNetworkXUnfeasible&quot;</span><span class="p">,</span><span class="nx">dc</span><span class="p">);</span><span class="kd">function</span> <span class="nx">ec</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">dc</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;JSNetworkXNoPath&quot;</span><span class="p">}</span><span class="nx">qa</span><span class="p">(</span><span class="nx">ec</span><span class="p">,</span><span class="nx">dc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.exception.JSNetworkXNoPath&quot;</span><span class="p">,</span><span class="nx">ec</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.JSNetworkXNoPath&quot;</span><span class="p">,</span><span class="nx">ec</span><span class="p">);</span></div><div class='line' id='LC59'><span class="kd">function</span> <span class="nx">fc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">cc</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;JSNetworkXUnbounded&quot;</span><span class="p">}</span><span class="nx">qa</span><span class="p">(</span><span class="nx">fc</span><span class="p">,</span><span class="nx">cc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.exception.JSNetworkXUnbounded&quot;</span><span class="p">,</span><span class="nx">fc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.JSNetworkXUnbounded&quot;</span><span class="p">,</span><span class="nx">fc</span><span class="p">);</span><span class="kd">function</span> <span class="nx">gc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="nx">jc</span><span class="p">(</span><span class="k">new</span> <span class="nx">kc</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">kc</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">da</span><span class="o">=</span><span class="nx">aa</span><span class="p">}</span></div><div class='line' id='LC60'><span class="kd">function</span> <span class="nx">jc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;string&quot;</span><span class="o">:</span><span class="nx">lc</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;number&quot;</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="s2">&quot;null&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;boolean&quot;</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;undefined&quot;</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;null&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;object&quot;</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">==</span><span class="nx">l</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;null&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">ga</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;[&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">jc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">da</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">da</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nb">String</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;,&quot;</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;]&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">}</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;{&quot;</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="s2">&quot;function&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">lc</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">),</span></div><div class='line' id='LC61'><span class="nx">jc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">da</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">da</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;,&quot;</span><span class="p">));</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;}&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;function&quot;</span><span class="o">:</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">h</span><span class="p">(</span><span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Unknown type: &quot;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">))}}</span><span class="kd">var</span> <span class="nx">mc</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;&quot;&#39;</span><span class="o">:</span><span class="s1">&#39;\\&quot;&#39;</span><span class="p">,</span><span class="s2">&quot;\\&quot;</span><span class="o">:</span><span class="s2">&quot;\\\\&quot;</span><span class="p">,</span><span class="s2">&quot;/&quot;</span><span class="o">:</span><span class="s2">&quot;\\/&quot;</span><span class="p">,</span><span class="s2">&quot;\b&quot;</span><span class="o">:</span><span class="s2">&quot;\\b&quot;</span><span class="p">,</span><span class="s2">&quot;\f&quot;</span><span class="o">:</span><span class="s2">&quot;\\f&quot;</span><span class="p">,</span><span class="s2">&quot;\n&quot;</span><span class="o">:</span><span class="s2">&quot;\\n&quot;</span><span class="p">,</span><span class="s2">&quot;\r&quot;</span><span class="o">:</span><span class="s2">&quot;\\r&quot;</span><span class="p">,</span><span class="s2">&quot;\t&quot;</span><span class="o">:</span><span class="s2">&quot;\\t&quot;</span><span class="p">,</span><span class="s2">&quot;\x0B&quot;</span><span class="o">:</span><span class="s2">&quot;\\u000b&quot;</span><span class="p">},</span><span class="nx">nc</span><span class="o">=</span><span class="sr">/\uffff/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="s2">&quot;\uffff&quot;</span><span class="p">)</span><span class="o">?</span><span class="sr">/[\\\&quot;\x00-\x1f\x7f-\uffff]/g</span><span class="o">:</span><span class="sr">/[\\\&quot;\x00-\x1f\x7f-\xff]/g</span><span class="p">;</span></div><div class='line' id='LC62'><span class="kd">function</span> <span class="nx">lc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">nc</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">mc</span><span class="p">)</span><span class="k">return</span> <span class="nx">mc</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;\\u&quot;</span><span class="p">;</span><span class="mi">16</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">?</span><span class="nx">e</span><span class="o">+=</span><span class="s2">&quot;000&quot;</span><span class="o">:</span><span class="mi">256</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">?</span><span class="nx">e</span><span class="o">+=</span><span class="s2">&quot;00&quot;</span><span class="o">:</span><span class="mi">4096</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">+=</span><span class="s2">&quot;0&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">mc</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="mi">16</span><span class="p">)}),</span><span class="s1">&#39;&quot;&#39;</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="k">this</span> <span class="k">instanceof</span> <span class="nx">O</span><span class="p">))</span><span class="k">return</span> <span class="k">new</span> <span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">graph</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">=</span><span class="p">{};</span><span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">Ub</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="nx">K</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">graph</span><span class="p">,</span><span class="nx">b</span><span class="o">||</span><span class="p">{});</span><span class="k">this</span><span class="p">.</span><span class="nx">edge</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.classes.Graph&quot;</span><span class="p">,</span><span class="nx">O</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.Graph&quot;</span><span class="p">,</span><span class="nx">O</span><span class="p">);</span><span class="nx">O</span><span class="p">.</span><span class="nx">__name__</span><span class="o">=</span><span class="s2">&quot;Graph&quot;</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Fa</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">graph</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Fa</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">qa</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">node</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">qa</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">za</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">adj</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">za</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Da</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">edge</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Da</span><span class="p">;</span></div><div class='line' id='LC63'><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">graph</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="p">();</span><span class="k">else</span> <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">graph</span><span class="p">.</span><span class="nx">name</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">()};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">||</span><span class="nx">h</span><span class="p">({</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;KeyError&quot;</span><span class="p">,</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;Graph does not contain node &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="p">});</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">]};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">get_node</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">g</span><span class="p">;</span></div><div class='line' id='LC64'><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">I</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">{});</span><span class="s2">&quot;object&quot;</span><span class="o">!==</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The attr_dict argument must be an object.&quot;</span><span class="p">));</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">?</span><span class="nx">K</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">b</span><span class="o">||</span><span class="p">{})</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="p">{})};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add_node</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">I</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">{});</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="o">=!</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">);</span><span class="nx">ga</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">d</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">?</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">K</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="nx">f</span><span class="o">=</span><span class="nx">db</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">K</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">))</span><span class="o">:</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">db</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="o">:</span><span class="nx">K</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">b</span><span class="p">)},</span><span class="k">this</span><span class="p">)};</span></div><div class='line' id='LC65'><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add_nodes_from</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">j</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">R</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The node &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; is not in the graph&quot;</span><span class="p">));</span><span class="nx">c</span><span class="o">=</span><span class="nx">H</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]);</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">A</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">I</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">a</span><span class="p">)});</span><span class="nx">I</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">remove_node</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">R</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">$</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">;</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">F</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">I</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">I</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){}},</span><span class="k">this</span><span class="p">)};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">remove_nodes_from</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">$</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">A</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">?</span><span class="nx">U</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">)</span><span class="o">:</span><span class="nx">kb</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">))};</span></div><div class='line' id='LC66'><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">nodes_iter</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">A</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">nodes</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">Xa</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">))};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">nodes</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">nodes</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Q</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">)};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">number_of_nodes</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Q</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">D</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">)};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">order</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">D</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">m</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="nx">ga</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">has_node</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">m</span><span class="p">;</span></div><div class='line' id='LC67'><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="p">{};</span><span class="s2">&quot;object&quot;</span><span class="o">!==</span><span class="nx">r</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The attr_dict argument must be an object.&quot;</span><span class="p">));</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{});</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">{});</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">,{});</span><span class="nx">K</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">b</span><span class="p">][</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add_edge</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">a</span><span class="p">;</span></div><div class='line' id='LC68'><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="p">{};</span><span class="s2">&quot;object&quot;</span><span class="o">!==</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The attr_dict argument must be an object.&quot;</span><span class="p">));</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">nb</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="mi">3</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="o">:</span><span class="mi">2</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="p">{})</span><span class="o">:</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;Edge tuple &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; must be a 2-tuple or 3-tuple.&quot;</span><span class="p">));</span><span class="nx">e</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="p">{});</span><span class="nx">f</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="p">{});</span><span class="nx">a</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">f</span><span class="p">,{});</span><span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">e</span><span class="p">][</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">f</span><span class="p">][</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">},</span><span class="k">this</span><span class="p">)};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add_edges_from</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">c</span><span class="p">;</span></div><div class='line' id='LC69'><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ya</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="p">{};</span><span class="nx">u</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;weight&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">P</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{};</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="nx">s</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;Values must consist of three elements: &quot;</span><span class="o">+</span><span class="nx">gc</span><span class="p">(</span><span class="nx">a</span><span class="p">)));</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">c</span><span class="p">]}),</span><span class="nx">c</span><span class="p">)};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add_weighted_edges_from</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ya</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">w</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="o">!=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">a</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span> <span class="k">instanceof</span> <span class="nx">TypeError</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The edge &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; is not in the graph&quot;</span><span class="p">)),</span><span class="nx">h</span><span class="p">(</span><span class="nx">c</span><span class="p">)}};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">remove_edge</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">w</span><span class="p">;</span></div><div class='line' id='LC70'><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">F</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">c</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">&amp;&amp;</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">c</span><span class="p">))},</span><span class="k">this</span><span class="p">)};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">remove_edges_from</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">F</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">O</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">&amp;&amp;</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">]};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">has_edge</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">O</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">L</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The node &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; is not in the graph.&quot;</span><span class="p">));</span><span class="k">return</span> <span class="nx">Q</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">])};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">neighbors</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">L</span><span class="p">;</span></div><div class='line' id='LC71'><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Y</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The node &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; is not in the graph.&quot;</span><span class="p">));</span><span class="k">return</span> <span class="nx">kb</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">])};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">neighbors_iter</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Y</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">p</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">Xa</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">))};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">edges</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">p</span><span class="p">;</span></div><div class='line' id='LC72'><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">l</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{},</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">]]},</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="nx">U</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="nx">S</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="nx">b</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">next</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">===</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span><span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">)}};</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="k">in</span> <span class="nx">c</span><span class="p">))</span><span class="k">return</span><span class="p">[</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]]})</span><span class="o">:</span><span class="nx">S</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">kb</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="nx">b</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">next</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">===</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span><span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">)}};</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">c</span><span class="p">))</span><span class="k">return</span><span class="p">[</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">]})};</span></div><div class='line' id='LC73'><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">edges_iter</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">e</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">T</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">s</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">?</span><span class="nx">J</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="p">(),</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">get_edge_data</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">T</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Aa</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Q</span><span class="p">(</span><span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">s</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])}))};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">adjacency_list</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Aa</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">)};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">adjacency_iter</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">s</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">t</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">).</span><span class="nx">next</span><span class="p">()[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="nx">gb</span><span class="p">(</span><span class="nx">Xa</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)))};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">degree</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">t</span><span class="p">;</span></div><div class='line' id='LC74'><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">u</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">]]},</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="nx">U</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="nx">P</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">f</span><span class="o">+=+</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">f</span><span class="o">+=+</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">));</span><span class="k">return</span><span class="p">[</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">]})</span><span class="o">:</span><span class="nx">P</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">+</span> <span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="k">in</span> <span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])]})};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">degree_iter</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">u</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">cb</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">);</span><span class="nx">cb</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">);</span><span class="nx">cb</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">graph</span><span class="p">)};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clear</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">copy</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">vb</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span></div><div class='line' id='LC75'><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">copy</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">copy</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">n</span><span class="o">=</span><span class="nx">ba</span><span class="p">(</span><span class="nx">p</span><span class="p">);</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">is_multigraph</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">n</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">ba</span><span class="p">(</span><span class="nx">p</span><span class="p">);</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">is_directed</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">H</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">X</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">());</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">S</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">s</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">T</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">])]})}.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">));</span><span class="nx">a</span><span class="p">.</span><span class="nx">graph</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">graph</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">to_directed</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">H</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">S</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">vb</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span></div><div class='line' id='LC76'><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">to_undirected</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">S</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">B</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="k">this</span><span class="p">.</span><span class="nx">constructor</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">adj</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">;</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{};</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">F</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="nx">m</span> <span class="k">in</span> <span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">m</span><span class="p">][</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">)})});</span><span class="nx">M</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">a</span><span class="p">]},</span><span class="k">this</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">graph</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">graph</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">subgraph</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">B</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Ka</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">ta</span><span class="p">(</span><span class="nx">sa</span><span class="p">(</span><span class="nx">ub</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="k">in</span> <span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]}),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]})};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">nodes_with_selfloops</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Ka</span><span class="p">;</span></div><div class='line' id='LC77'><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">aa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">?</span><span class="nx">ta</span><span class="p">(</span><span class="nx">sa</span><span class="p">(</span><span class="nx">ub</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="k">in</span> <span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]}),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span><span class="p">[</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="nx">c</span><span class="p">]]})</span><span class="o">:</span><span class="nx">ta</span><span class="p">(</span><span class="nx">sa</span><span class="p">(</span><span class="nx">ub</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="k">in</span> <span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]}),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]]})};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">selfloop_edges</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">aa</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">La</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">aa</span><span class="p">().</span><span class="nx">length</span><span class="p">};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">number_of_selfloops</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">La</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">size</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">v</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">ab</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">t</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">a</span><span class="p">)))</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">b</span><span class="p">)};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">size</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">size</span><span class="p">;</span></div><div class='line' id='LC78'><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">P</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">==</span><span class="nx">l</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">size</span><span class="p">())</span><span class="o">:</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">number_of_edges</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">P</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">xa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">P</span><span class="p">(</span><span class="nx">Ha</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">]});</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add_star</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">xa</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">wa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">Qa</span><span class="p">(</span><span class="nx">Ha</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">Ha</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add_path</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">wa</span><span class="p">;</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">va</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">Qa</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">Ba</span><span class="p">(</span><span class="nx">Ha</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">),[</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]]));</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add_cycle</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">va</span><span class="p">;</span></div><div class='line' id='LC79'><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">kb</span><span class="p">([</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="p">()])</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">S</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="p">()});</span><span class="nx">d</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">next</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">TypeError</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;nbunch is not a node or a sequence of nodes&quot;</span><span class="p">)),</span><span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">)}};</span><span class="k">return</span> <span class="nx">d</span><span class="p">}(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">)</span><span class="o">:</span><span class="nx">kb</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">)};</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">nbunch_iter</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">d</span><span class="p">;</span><span class="kd">function</span> <span class="nx">X</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="k">this</span> <span class="k">instanceof</span> <span class="nx">X</span><span class="p">))</span><span class="k">return</span> <span class="k">new</span> <span class="nx">X</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">graph</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">;</span><span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">Ub</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="nx">K</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">graph</span><span class="p">,</span><span class="nx">b</span><span class="o">||</span><span class="p">{});</span><span class="k">this</span><span class="p">.</span><span class="nx">edge</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.classes.DiGraph&quot;</span><span class="p">,</span><span class="nx">X</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.DiGraph&quot;</span><span class="p">,</span><span class="nx">X</span><span class="p">);</span><span class="nx">qa</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span><span class="nx">O</span><span class="p">);</span><span class="nx">X</span><span class="p">.</span><span class="nx">__name__</span><span class="o">=</span><span class="s2">&quot;DiGraph&quot;</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">I</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">{});</span><span class="s2">&quot;object&quot;</span><span class="o">!==</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The attr_dict argument must be an object.&quot;</span><span class="p">));</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="o">?</span><span class="nx">K</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">)};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add_node</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">I</span><span class="p">;</span></div><div class='line' id='LC80'><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">{});</span><span class="nx">M</span><span class="p">(</span><span class="nx">kb</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="o">=!</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">);</span><span class="nx">ga</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">d</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="o">?</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">K</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="nx">f</span><span class="o">=</span><span class="nx">db</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">K</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">))</span><span class="o">:</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">db</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="o">:</span><span class="nx">K</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">b</span><span class="p">)},</span><span class="k">this</span><span class="p">)};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add_nodes_from</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">j</span><span class="p">;</span></div><div class='line' id='LC81'><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">R</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The node &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; is not in the graph&quot;</span><span class="p">));</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">F</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">a</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">a</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">remove_node</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">R</span><span class="p">;</span></div><div class='line' id='LC82'><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">$</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">F</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">a</span><span class="p">)},</span><span class="k">this</span><span class="p">),</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">a</span><span class="p">)},</span><span class="k">this</span><span class="p">),</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">,</span><span class="nx">a</span><span class="p">))},</span><span class="k">this</span><span class="p">)};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">remove_nodes_from</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">$</span><span class="p">;</span></div><div class='line' id='LC83'><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="p">{};</span><span class="s2">&quot;object&quot;</span><span class="o">!==</span><span class="nx">r</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The attr_dict argument must be an object.&quot;</span><span class="p">));</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{});</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">{});</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,{});</span><span class="nx">K</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">b</span><span class="p">][</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add_edge</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">a</span><span class="p">;</span></div><div class='line' id='LC84'><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="p">{};</span><span class="s2">&quot;object&quot;</span><span class="o">!==</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The attr_dict argument must be an object.&quot;</span><span class="p">));</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">nb</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="mi">3</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="o">:</span><span class="mi">2</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="p">{})</span><span class="o">:</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;Edge tuple &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; must be a 2-tuple or 3-tuple.&quot;</span><span class="p">));</span><span class="nx">e</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="p">{});</span><span class="nx">f</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="p">{});</span><span class="nx">a</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">f</span><span class="p">,{});</span><span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">e</span><span class="p">][</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">f</span><span class="p">][</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">},</span><span class="k">this</span><span class="p">)};</span></div><div class='line' id='LC85'><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add_edges_from</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">c</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">w</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">b</span><span class="p">),</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">a</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span> <span class="k">instanceof</span> <span class="nx">TypeError</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The edge &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; is not in the graph&quot;</span><span class="p">)),</span><span class="nx">h</span><span class="p">(</span><span class="nx">c</span><span class="p">)}};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">remove_edge</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">w</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">F</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">c</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="o">&amp;&amp;</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">a</span><span class="p">),</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">c</span><span class="p">))},</span><span class="k">this</span><span class="p">)};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">remove_edges_from</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">F</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Ha</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="o">&amp;&amp;</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">a</span><span class="p">]};</span></div><div class='line' id='LC86'><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">has_successor</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Ha</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Ga</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="o">&amp;&amp;</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">a</span><span class="p">]};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">has_predecessor</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Ga</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ia</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The node &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; is not in the digraph.&quot;</span><span class="p">));</span><span class="k">return</span> <span class="nx">kb</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">a</span><span class="p">])};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">successors_iter</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ia</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">sa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The node &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; is not in the digraph.&quot;</span><span class="p">));</span><span class="k">return</span> <span class="nx">kb</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">a</span><span class="p">])};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">predecessors_iter</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">sa</span><span class="p">;</span></div><div class='line' id='LC87'><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ta</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The node &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; is not in the digraph.&quot;</span><span class="p">));</span><span class="k">return</span> <span class="nx">Q</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">a</span><span class="p">])};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">successors</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ta</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Ma</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The node &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; is not in the digraph.&quot;</span><span class="p">));</span><span class="k">return</span> <span class="nx">Q</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">a</span><span class="p">])};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">predecessors</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Ma</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">L</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ta</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">neighbors</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">L</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Y</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ia</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">neighbors_iter</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Y</span><span class="p">;</span></div><div class='line' id='LC88'><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">l</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">]]},</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="nx">ub</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="nx">S</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">e</span><span class="p">)},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]]})</span><span class="o">:</span><span class="nx">S</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">e</span><span class="p">)},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]]})};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">edges_iter</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">e</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ca</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">e</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">out_edges_iter</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ca</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ga</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">p</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">out_edges</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ga</span><span class="p">;</span></div><div class='line' id='LC89'><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">J</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">l</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">a</span><span class="p">]]},</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="nx">ub</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="nx">S</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]]})</span><span class="o">:</span><span class="nx">S</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="p">]})};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">in_edges_iter</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">J</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">V</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">Q</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">))};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">in_edges</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">V</span><span class="p">;</span></div><div class='line' id='LC90'><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">u</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">pb</span><span class="p">(</span><span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">a</span><span class="p">]]},</span><span class="k">this</span><span class="p">),</span><span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">a</span><span class="p">]]},</span><span class="k">this</span><span class="p">))</span><span class="o">:</span><span class="nx">pb</span><span class="p">(</span><span class="nx">U</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">),</span><span class="nx">U</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">));</span><span class="k">return</span> <span class="nx">u</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">P</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span> <span class="k">in</span> <span class="nx">c</span><span class="p">)</span><span class="nx">g</span><span class="o">+=+</span><span class="nx">J</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">m</span><span class="p">],</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span> <span class="k">in</span> <span class="nx">f</span><span class="p">)</span><span class="nx">g</span><span class="o">+=+</span><span class="nx">J</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">m</span><span class="p">],</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span><span class="nx">g</span><span class="p">]})</span><span class="o">:</span><span class="nx">P</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span><span class="nx">nb</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">])</span><span class="o">+</span><span class="nx">nb</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">])]})};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">degree_iter</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">u</span><span class="p">;</span></div><div class='line' id='LC91'><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">U</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">a</span><span class="p">]]},</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="nx">U</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">P</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">g</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span> <span class="k">in</span> <span class="nx">f</span><span class="p">)</span><span class="nx">c</span><span class="o">+=+</span><span class="nx">J</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">c</span><span class="p">]})</span><span class="o">:</span><span class="nx">P</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])]})};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">in_degree_iter</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">U</span><span class="p">;</span></div><div class='line' id='LC92'><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Z</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">a</span><span class="p">]]},</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="nx">U</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">P</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">g</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span> <span class="k">in</span> <span class="nx">f</span><span class="p">)</span><span class="nx">c</span><span class="o">+=+</span><span class="nx">J</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">c</span><span class="p">]})</span><span class="o">:</span><span class="nx">P</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])]})};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">out_degree_iter</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Z</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">na</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">).</span><span class="nx">next</span><span class="p">()[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="nx">gb</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">))};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">in_degree</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">na</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ra</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">Z</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">).</span><span class="nx">next</span><span class="p">()[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="nx">gb</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">Z</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">))};</span></div><div class='line' id='LC93'><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">out_degree</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ra</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">cb</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">);</span><span class="nx">cb</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">);</span><span class="nx">cb</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">);</span><span class="nx">cb</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">graph</span><span class="p">)};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clear</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">n</span><span class="o">=</span><span class="nx">ba</span><span class="p">(</span><span class="nx">p</span><span class="p">);</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">is_multigraph</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">n</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">ba</span><span class="p">(</span><span class="nx">k</span><span class="p">);</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">is_directed</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">H</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">vb</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">to_directed</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">H</span><span class="p">;</span></div><div class='line' id='LC94'><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">S</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">O</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">());</span><span class="nx">b</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">S</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">s</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="k">in</span> <span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">])</span><span class="k">return</span><span class="p">[</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])]}))</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">S</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">s</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])]}));</span><span class="nx">b</span><span class="p">.</span><span class="nx">graph</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">graph</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">node</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">to_undirected</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">S</span><span class="p">;</span></div><div class='line' id='LC95'><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">reverse</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){(</span><span class="nx">a</span><span class="o">=!</span><span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="k">this</span><span class="p">.</span><span class="nx">constructor</span><span class="p">(</span><span class="nx">l</span><span class="p">,{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;Reverse of (&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">])]})),</span><span class="nx">a</span><span class="p">.</span><span class="nx">graph</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">graph</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">reverse</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">reverse</span><span class="p">;</span></div><div class='line' id='LC96'><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">B</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="k">this</span><span class="p">.</span><span class="nx">constructor</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">succ</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">pred</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">;</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{};</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{}});</span><span class="nx">M</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">F</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="nx">n</span> <span class="k">in</span> <span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">n</span><span class="p">][</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">)})});</span><span class="nx">M</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">a</span><span class="p">]},</span><span class="k">this</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">graph</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">graph</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">subgraph</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">B</span><span class="p">;</span><span class="kd">function</span> <span class="nx">oc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">e</span><span class="o">=</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">next</span><span class="p">()]}</span><span class="k">catch</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span> <span class="nx">g</span><span class="o">!==</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">f</span><span class="p">}</span><span class="nx">f</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="mi">0</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">B</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)[</span><span class="mi">0</span><span class="p">]};</span><span class="k">return</span> <span class="nx">S</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">R</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">next</span><span class="p">();</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="p">[</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">]}</span><span class="k">catch</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">!==</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">b</span><span class="p">)}})}</span><span class="kd">function</span> <span class="nx">pc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">qc</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">oc</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">));</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.generators.classic.full_rary_tree&quot;</span><span class="p">,</span><span class="nx">pc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.full_rary_tree&quot;</span><span class="p">,</span><span class="nx">pc</span><span class="p">);</span><span class="kd">function</span> <span class="nx">rc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="mi">2</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">((</span><span class="mi">1</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">))</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">a</span><span class="p">));</span><span class="nx">c</span><span class="o">=</span><span class="nx">qc</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">oc</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">));</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span></div><div class='line' id='LC97'><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.generators.classic.balanced_tree&quot;</span><span class="p">,</span><span class="nx">rc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.balanced_tree&quot;</span><span class="p">,</span><span class="nx">rc</span><span class="p">);</span><span class="kd">function</span> <span class="nx">sc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">qc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">name</span><span class="p">(</span><span class="s2">&quot;complete_graph(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">);</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">b</span><span class="p">()</span><span class="o">?</span><span class="nx">sb</span><span class="p">(</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="o">:</span><span class="nx">rb</span><span class="p">(</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">)));</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.generators.classic.complete_graph&quot;</span><span class="p">,</span><span class="nx">sc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.complete_graph&quot;</span><span class="p">,</span><span class="nx">sc</span><span class="p">);</span><span class="kd">function</span> <span class="nx">tc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">uc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">name</span><span class="p">(</span><span class="s2">&quot;cycle_graph(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">);</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.generators.classic.cycle_graph&quot;</span><span class="p">,</span><span class="nx">tc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.cycle_graph&quot;</span><span class="p">,</span><span class="nx">tc</span><span class="p">);</span></div><div class='line' id='LC98'><span class="kd">function</span> <span class="nx">qc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">O</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">l</span><span class="p">);</span><span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">clear</span><span class="p">())</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">O</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="nx">c</span><span class="p">.</span><span class="nx">name</span><span class="p">(</span><span class="s2">&quot;empty_graph(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.generators.classic.empty_graph&quot;</span><span class="p">,</span><span class="nx">qc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.empty_graph&quot;</span><span class="p">,</span><span class="nx">qc</span><span class="p">);</span></div><div class='line' id='LC99'><span class="kd">function</span> <span class="nx">vc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">qc</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">name</span><span class="p">(</span><span class="s2">&quot;grid_2d_graph&quot;</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">Xa</span><span class="p">(</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">Xa</span><span class="p">(</span><span class="nx">R</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="nx">A</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">A</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">I</span><span class="p">([</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">].</span><span class="nx">toString</span><span class="p">())})});</span><span class="nx">E</span><span class="p">(</span><span class="nx">R</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">A</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">a</span><span class="p">([</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">].</span><span class="nx">toString</span><span class="p">(),[</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">].</span><span class="nx">toString</span><span class="p">())})});</span><span class="nx">A</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">E</span><span class="p">(</span><span class="nx">R</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">a</span><span class="p">([</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">].</span><span class="nx">toString</span><span class="p">(),[</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">toString</span><span class="p">())})});</span><span class="nx">e</span><span class="p">.</span><span class="nx">b</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">E</span><span class="p">(</span><span class="nx">R</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">A</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">a</span><span class="p">([</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">].</span><span class="nx">toString</span><span class="p">(),[</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">].</span><span class="nx">toString</span><span class="p">())})}),</span><span class="nx">A</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">E</span><span class="p">(</span><span class="nx">R</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">a</span><span class="p">([</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">].</span><span class="nx">toString</span><span class="p">(),[</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="nx">toString</span><span class="p">())})}));</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">2</span><span class="o">&lt;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">A</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">a</span><span class="p">([</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC100'><span class="mi">0</span><span class="p">].</span><span class="nx">toString</span><span class="p">(),[</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">toString</span><span class="p">())}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">b</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">a</span><span class="p">([</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">toString</span><span class="p">(),[</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">].</span><span class="nx">toString</span><span class="p">())})),</span><span class="mi">2</span><span class="o">&lt;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">A</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">a</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">].</span><span class="nx">toString</span><span class="p">(),[</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">].</span><span class="nx">toString</span><span class="p">())}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">b</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">a</span><span class="p">([</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">].</span><span class="nx">toString</span><span class="p">(),[</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">].</span><span class="nx">toString</span><span class="p">())})),</span><span class="nx">e</span><span class="p">.</span><span class="nx">name</span><span class="p">(</span><span class="s2">&quot;periodic_grid_2d_graph(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">));</span><span class="k">return</span> <span class="nx">e</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.generators.classic.grid_2d_graph&quot;</span><span class="p">,</span><span class="nx">vc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.grid_2d_graph&quot;</span><span class="p">,</span><span class="nx">vc</span><span class="p">);</span><span class="kd">function</span> <span class="nx">wc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">qc</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">(</span><span class="s2">&quot;null_graph()&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.generators.classic.null_graph&quot;</span><span class="p">,</span><span class="nx">wc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.null_graph&quot;</span><span class="p">,</span><span class="nx">wc</span><span class="p">);</span></div><div class='line' id='LC101'><span class="kd">function</span> <span class="nx">uc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">qc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">name</span><span class="p">(</span><span class="s2">&quot;path_graph(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">Ua</span><span class="p">(</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="p">]}));</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.generators.classic.path_graph&quot;</span><span class="p">,</span><span class="nx">uc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.path_graph&quot;</span><span class="p">,</span><span class="nx">uc</span><span class="p">);</span><span class="kd">function</span> <span class="nx">xc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">qc</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">(</span><span class="s2">&quot;null_graph()&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.generators.classic.trivial_graph&quot;</span><span class="p">,</span><span class="nx">xc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.trivial_graph&quot;</span><span class="p">,</span><span class="nx">xc</span><span class="p">);</span><span class="kd">function</span> <span class="nx">yc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">!=</span><span class="nx">l</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">p</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">qc</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">name</span><span class="p">(</span><span class="s2">&quot;fast_gnp_random_graph(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">b</span><span class="o">||</span><span class="mi">1</span><span class="o">&lt;=</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">zc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">X</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;){</span><span class="nx">c</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">());</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">c</span><span class="o">/</span><span class="nx">b</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">===</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">+=</span><span class="mi">1</span><span class="p">);</span><span class="nx">f</span><span class="o">&gt;=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;)</span><span class="nx">f</span><span class="o">-=</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">+=</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="o">==</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">+=</span><span class="mi">1</span><span class="p">);</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">)}</span><span class="k">else</span> <span class="k">for</span><span class="p">(;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;){</span><span class="nx">c</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">());</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">c</span><span class="o">/</span><span class="nx">b</span><span class="p">);</span><span class="nx">f</span><span class="o">&gt;=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;)</span><span class="nx">f</span><span class="o">-=</span><span class="nx">e</span><span class="p">,</span><span class="nx">e</span><span class="o">+=</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">)}</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.generators.random_graphs.fast_gnp_random_graph&quot;</span><span class="p">,</span><span class="nx">yc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.fast_gnp_random_graph&quot;</span><span class="p">,</span><span class="nx">yc</span><span class="p">);</span></div><div class='line' id='LC102'><span class="kd">function</span> <span class="nx">zc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="k">new</span> <span class="nx">X</span><span class="o">:</span><span class="k">new</span> <span class="nx">O</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="nx">d</span><span class="p">.</span><span class="nx">name</span><span class="p">(</span><span class="s2">&quot;gnp_random_graph(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;=</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">sc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">b</span><span class="p">()</span><span class="o">?</span><span class="nx">sb</span><span class="p">(</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="o">:</span><span class="nx">rb</span><span class="p">(</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span><span class="o">&lt;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])});</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.generators.random_graphs.gnp_random_graph&quot;</span><span class="p">,</span><span class="nx">zc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.gnp_random_graph&quot;</span><span class="p">,</span><span class="nx">zc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.binomial_graph&quot;</span><span class="p">,</span><span class="nx">zc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.erdos_renyi_graph&quot;</span><span class="p">,</span><span class="nx">zc</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Ac</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">Bc</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;Invalid degree sequence&quot;</span><span class="p">));</span><span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;Directed Graph not supported&quot;</span><span class="p">)),</span><span class="nx">b</span><span class="p">.</span><span class="nx">n</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;Havel-Hakimi requires simple graph&quot;</span><span class="p">)));</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">qc</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="o">||</span><span class="mi">0</span><span class="o">===</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="nx">d</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">Xa</span><span class="p">(</span><span class="nx">P</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">b</span><span class="p">]}));</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;){</span><span class="nx">c</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!==</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:+</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-+</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]});</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span><span class="k">return</span> <span class="nx">p</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="k">break</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="nx">p</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="o">-</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">][</span><span class="mi">1</span><span class="p">]),</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">-=</span></div><div class='line' id='LC103'><span class="mi">1</span><span class="p">}</span><span class="nx">d</span><span class="p">.</span><span class="nx">name</span><span class="p">(</span><span class="s2">&quot;havel_hakimi_graph &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">D</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; nodes &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">size</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; edges&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.generators.degree_seq.havel_hakimi_graph&quot;</span><span class="p">,</span><span class="nx">Ac</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.havel_hakimi_graph&quot;</span><span class="p">,</span><span class="nx">Ac</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Cc</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">O</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="nx">R</span><span class="p">(</span><span class="mi">34</span><span class="p">));</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">(</span><span class="s2">&quot;Zachary&#39;s Karate Club&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">A</span><span class="p">(</span><span class="s2">&quot;0 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0;1 0 1 1 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0;1 1 0 1 0 0 0 1 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0;1 1 1 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;1 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;1 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1;0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1;1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1;0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1;0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1;0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1;1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1;0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1;1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1;0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 1 1;0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0;0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 0;0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1;0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1;0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1;0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1;0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1;1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1;0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 1 0 1 0 1 1 0 0 0 0 0 1 1 1 0 1;0 0 0 0 0 0 0 0 1 1 0 0 0 1 1 1 0 0 1 1 1 0 1 1 0 0 1 1 1 1 1 1 1 0&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;;&quot;</span><span class="p">),</span></div><div class='line' id='LC104'><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">M</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="s2">&quot;1&quot;</span><span class="o">===</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">)});</span><span class="nx">b</span><span class="o">+=</span><span class="mi">1</span><span class="p">});</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.generators.social.karate_club_graph&quot;</span><span class="p">,</span><span class="nx">Cc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.karate_club_graph&quot;</span><span class="p">,</span><span class="nx">Cc</span><span class="p">);</span></div><div class='line' id='LC105'><span class="kd">function</span> <span class="nx">Dc</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">O</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="s2">&quot;Evelyn Jefferson;Laura Mandeville;Theresa Anderson;Brenda Rogers;Charlotte McDowd;Frances Anderson;Eleanor Nye;Pearl Oglethorpe;Ruth DeSand;Verne Sanderson;Myra Liddel;Katherina Rogers;Sylvia Avondale;Nora Fayette;Helen Lloyd;Dorothy Murchison;Olivia Carleton;Flora Price&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;;&quot;</span><span class="p">),{</span><span class="nx">Ca</span><span class="o">:</span><span class="mi">0</span><span class="p">});</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="s2">&quot;E1 E2 E3 E4 E5 E6 E7 E8 E9 E10 E11 E12 E13 E14&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),{</span><span class="nx">Ca</span><span class="o">:</span><span class="mi">1</span><span class="p">});</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">([[</span><span class="s2">&quot;Evelyn Jefferson&quot;</span><span class="p">,</span><span class="s2">&quot;E1&quot;</span><span class="p">],[</span><span class="s2">&quot;Evelyn Jefferson&quot;</span><span class="p">,</span><span class="s2">&quot;E2&quot;</span><span class="p">],[</span><span class="s2">&quot;Evelyn Jefferson&quot;</span><span class="p">,</span><span class="s2">&quot;E3&quot;</span><span class="p">],[</span><span class="s2">&quot;Evelyn Jefferson&quot;</span><span class="p">,</span><span class="s2">&quot;E4&quot;</span><span class="p">],</span></div><div class='line' id='LC106'><span class="p">[</span><span class="s2">&quot;Evelyn Jefferson&quot;</span><span class="p">,</span><span class="s2">&quot;E5&quot;</span><span class="p">],[</span><span class="s2">&quot;Evelyn Jefferson&quot;</span><span class="p">,</span><span class="s2">&quot;E6&quot;</span><span class="p">],[</span><span class="s2">&quot;Evelyn Jefferson&quot;</span><span class="p">,</span><span class="s2">&quot;E8&quot;</span><span class="p">],[</span><span class="s2">&quot;Evelyn Jefferson&quot;</span><span class="p">,</span><span class="s2">&quot;E9&quot;</span><span class="p">],[</span><span class="s2">&quot;Laura Mandeville&quot;</span><span class="p">,</span><span class="s2">&quot;E1&quot;</span><span class="p">],[</span><span class="s2">&quot;Laura Mandeville&quot;</span><span class="p">,</span><span class="s2">&quot;E2&quot;</span><span class="p">],[</span><span class="s2">&quot;Laura Mandeville&quot;</span><span class="p">,</span><span class="s2">&quot;E3&quot;</span><span class="p">],[</span><span class="s2">&quot;Laura Mandeville&quot;</span><span class="p">,</span><span class="s2">&quot;E5&quot;</span><span class="p">],[</span><span class="s2">&quot;Laura Mandeville&quot;</span><span class="p">,</span><span class="s2">&quot;E6&quot;</span><span class="p">],[</span><span class="s2">&quot;Laura Mandeville&quot;</span><span class="p">,</span><span class="s2">&quot;E7&quot;</span><span class="p">],[</span><span class="s2">&quot;Laura Mandeville&quot;</span><span class="p">,</span><span class="s2">&quot;E8&quot;</span><span class="p">],[</span><span class="s2">&quot;Theresa Anderson&quot;</span><span class="p">,</span><span class="s2">&quot;E2&quot;</span><span class="p">],[</span><span class="s2">&quot;Theresa Anderson&quot;</span><span class="p">,</span><span class="s2">&quot;E3&quot;</span><span class="p">],[</span><span class="s2">&quot;Theresa Anderson&quot;</span><span class="p">,</span><span class="s2">&quot;E4&quot;</span><span class="p">],[</span><span class="s2">&quot;Theresa Anderson&quot;</span><span class="p">,</span><span class="s2">&quot;E5&quot;</span><span class="p">],[</span><span class="s2">&quot;Theresa Anderson&quot;</span><span class="p">,</span><span class="s2">&quot;E6&quot;</span><span class="p">],[</span><span class="s2">&quot;Theresa Anderson&quot;</span><span class="p">,</span><span class="s2">&quot;E7&quot;</span><span class="p">],[</span><span class="s2">&quot;Theresa Anderson&quot;</span><span class="p">,</span><span class="s2">&quot;E8&quot;</span><span class="p">],[</span><span class="s2">&quot;Theresa Anderson&quot;</span><span class="p">,</span><span class="s2">&quot;E9&quot;</span><span class="p">],[</span><span class="s2">&quot;Brenda Rogers&quot;</span><span class="p">,</span></div><div class='line' id='LC107'><span class="s2">&quot;E1&quot;</span><span class="p">],[</span><span class="s2">&quot;Brenda Rogers&quot;</span><span class="p">,</span><span class="s2">&quot;E3&quot;</span><span class="p">],[</span><span class="s2">&quot;Brenda Rogers&quot;</span><span class="p">,</span><span class="s2">&quot;E4&quot;</span><span class="p">],[</span><span class="s2">&quot;Brenda Rogers&quot;</span><span class="p">,</span><span class="s2">&quot;E5&quot;</span><span class="p">],[</span><span class="s2">&quot;Brenda Rogers&quot;</span><span class="p">,</span><span class="s2">&quot;E6&quot;</span><span class="p">],[</span><span class="s2">&quot;Brenda Rogers&quot;</span><span class="p">,</span><span class="s2">&quot;E7&quot;</span><span class="p">],[</span><span class="s2">&quot;Brenda Rogers&quot;</span><span class="p">,</span><span class="s2">&quot;E8&quot;</span><span class="p">],[</span><span class="s2">&quot;Charlotte McDowd&quot;</span><span class="p">,</span><span class="s2">&quot;E3&quot;</span><span class="p">],[</span><span class="s2">&quot;Charlotte McDowd&quot;</span><span class="p">,</span><span class="s2">&quot;E4&quot;</span><span class="p">],[</span><span class="s2">&quot;Charlotte McDowd&quot;</span><span class="p">,</span><span class="s2">&quot;E5&quot;</span><span class="p">],[</span><span class="s2">&quot;Charlotte McDowd&quot;</span><span class="p">,</span><span class="s2">&quot;E7&quot;</span><span class="p">],[</span><span class="s2">&quot;Frances Anderson&quot;</span><span class="p">,</span><span class="s2">&quot;E3&quot;</span><span class="p">],[</span><span class="s2">&quot;Frances Anderson&quot;</span><span class="p">,</span><span class="s2">&quot;E5&quot;</span><span class="p">],[</span><span class="s2">&quot;Frances Anderson&quot;</span><span class="p">,</span><span class="s2">&quot;E6&quot;</span><span class="p">],[</span><span class="s2">&quot;Frances Anderson&quot;</span><span class="p">,</span><span class="s2">&quot;E8&quot;</span><span class="p">],[</span><span class="s2">&quot;Eleanor Nye&quot;</span><span class="p">,</span><span class="s2">&quot;E5&quot;</span><span class="p">],[</span><span class="s2">&quot;Eleanor Nye&quot;</span><span class="p">,</span><span class="s2">&quot;E6&quot;</span><span class="p">],[</span><span class="s2">&quot;Eleanor Nye&quot;</span><span class="p">,</span><span class="s2">&quot;E7&quot;</span><span class="p">],[</span><span class="s2">&quot;Eleanor Nye&quot;</span><span class="p">,</span><span class="s2">&quot;E8&quot;</span><span class="p">],[</span><span class="s2">&quot;Pearl Oglethorpe&quot;</span><span class="p">,</span><span class="s2">&quot;E6&quot;</span><span class="p">],[</span><span class="s2">&quot;Pearl Oglethorpe&quot;</span><span class="p">,</span><span class="s2">&quot;E8&quot;</span><span class="p">],[</span><span class="s2">&quot;Pearl Oglethorpe&quot;</span><span class="p">,</span></div><div class='line' id='LC108'><span class="s2">&quot;E9&quot;</span><span class="p">],[</span><span class="s2">&quot;Ruth DeSand&quot;</span><span class="p">,</span><span class="s2">&quot;E5&quot;</span><span class="p">],[</span><span class="s2">&quot;Ruth DeSand&quot;</span><span class="p">,</span><span class="s2">&quot;E7&quot;</span><span class="p">],[</span><span class="s2">&quot;Ruth DeSand&quot;</span><span class="p">,</span><span class="s2">&quot;E8&quot;</span><span class="p">],[</span><span class="s2">&quot;Ruth DeSand&quot;</span><span class="p">,</span><span class="s2">&quot;E9&quot;</span><span class="p">],[</span><span class="s2">&quot;Verne Sanderson&quot;</span><span class="p">,</span><span class="s2">&quot;E7&quot;</span><span class="p">],[</span><span class="s2">&quot;Verne Sanderson&quot;</span><span class="p">,</span><span class="s2">&quot;E8&quot;</span><span class="p">],[</span><span class="s2">&quot;Verne Sanderson&quot;</span><span class="p">,</span><span class="s2">&quot;E9&quot;</span><span class="p">],[</span><span class="s2">&quot;Verne Sanderson&quot;</span><span class="p">,</span><span class="s2">&quot;E12&quot;</span><span class="p">],[</span><span class="s2">&quot;Myra Liddel&quot;</span><span class="p">,</span><span class="s2">&quot;E8&quot;</span><span class="p">],[</span><span class="s2">&quot;Myra Liddel&quot;</span><span class="p">,</span><span class="s2">&quot;E9&quot;</span><span class="p">],[</span><span class="s2">&quot;Myra Liddel&quot;</span><span class="p">,</span><span class="s2">&quot;E10&quot;</span><span class="p">],[</span><span class="s2">&quot;Myra Liddel&quot;</span><span class="p">,</span><span class="s2">&quot;E12&quot;</span><span class="p">],[</span><span class="s2">&quot;Katherina Rogers&quot;</span><span class="p">,</span><span class="s2">&quot;E8&quot;</span><span class="p">],[</span><span class="s2">&quot;Katherina Rogers&quot;</span><span class="p">,</span><span class="s2">&quot;E9&quot;</span><span class="p">],[</span><span class="s2">&quot;Katherina Rogers&quot;</span><span class="p">,</span><span class="s2">&quot;E10&quot;</span><span class="p">],[</span><span class="s2">&quot;Katherina Rogers&quot;</span><span class="p">,</span><span class="s2">&quot;E12&quot;</span><span class="p">],[</span><span class="s2">&quot;Katherina Rogers&quot;</span><span class="p">,</span><span class="s2">&quot;E13&quot;</span><span class="p">],[</span><span class="s2">&quot;Katherina Rogers&quot;</span><span class="p">,</span><span class="s2">&quot;E14&quot;</span><span class="p">],[</span><span class="s2">&quot;Sylvia Avondale&quot;</span><span class="p">,</span><span class="s2">&quot;E7&quot;</span><span class="p">],[</span><span class="s2">&quot;Sylvia Avondale&quot;</span><span class="p">,</span><span class="s2">&quot;E8&quot;</span><span class="p">],[</span><span class="s2">&quot;Sylvia Avondale&quot;</span><span class="p">,</span></div><div class='line' id='LC109'><span class="s2">&quot;E9&quot;</span><span class="p">],[</span><span class="s2">&quot;Sylvia Avondale&quot;</span><span class="p">,</span><span class="s2">&quot;E10&quot;</span><span class="p">],[</span><span class="s2">&quot;Sylvia Avondale&quot;</span><span class="p">,</span><span class="s2">&quot;E12&quot;</span><span class="p">],[</span><span class="s2">&quot;Sylvia Avondale&quot;</span><span class="p">,</span><span class="s2">&quot;E13&quot;</span><span class="p">],[</span><span class="s2">&quot;Sylvia Avondale&quot;</span><span class="p">,</span><span class="s2">&quot;E14&quot;</span><span class="p">],[</span><span class="s2">&quot;Nora Fayette&quot;</span><span class="p">,</span><span class="s2">&quot;E6&quot;</span><span class="p">],[</span><span class="s2">&quot;Nora Fayette&quot;</span><span class="p">,</span><span class="s2">&quot;E7&quot;</span><span class="p">],[</span><span class="s2">&quot;Nora Fayette&quot;</span><span class="p">,</span><span class="s2">&quot;E9&quot;</span><span class="p">],[</span><span class="s2">&quot;Nora Fayette&quot;</span><span class="p">,</span><span class="s2">&quot;E10&quot;</span><span class="p">],[</span><span class="s2">&quot;Nora Fayette&quot;</span><span class="p">,</span><span class="s2">&quot;E11&quot;</span><span class="p">],[</span><span class="s2">&quot;Nora Fayette&quot;</span><span class="p">,</span><span class="s2">&quot;E12&quot;</span><span class="p">],[</span><span class="s2">&quot;Nora Fayette&quot;</span><span class="p">,</span><span class="s2">&quot;E13&quot;</span><span class="p">],[</span><span class="s2">&quot;Nora Fayette&quot;</span><span class="p">,</span><span class="s2">&quot;E14&quot;</span><span class="p">],[</span><span class="s2">&quot;Helen Lloyd&quot;</span><span class="p">,</span><span class="s2">&quot;E7&quot;</span><span class="p">],[</span><span class="s2">&quot;Helen Lloyd&quot;</span><span class="p">,</span><span class="s2">&quot;E8&quot;</span><span class="p">],[</span><span class="s2">&quot;Helen Lloyd&quot;</span><span class="p">,</span><span class="s2">&quot;E10&quot;</span><span class="p">],[</span><span class="s2">&quot;Helen Lloyd&quot;</span><span class="p">,</span><span class="s2">&quot;E11&quot;</span><span class="p">],[</span><span class="s2">&quot;Helen Lloyd&quot;</span><span class="p">,</span><span class="s2">&quot;E12&quot;</span><span class="p">],[</span><span class="s2">&quot;Dorothy Murchison&quot;</span><span class="p">,</span><span class="s2">&quot;E8&quot;</span><span class="p">],[</span><span class="s2">&quot;Dorothy Murchison&quot;</span><span class="p">,</span><span class="s2">&quot;E9&quot;</span><span class="p">],[</span><span class="s2">&quot;Olivia Carleton&quot;</span><span class="p">,</span><span class="s2">&quot;E9&quot;</span><span class="p">],[</span><span class="s2">&quot;Olivia Carleton&quot;</span><span class="p">,</span><span class="s2">&quot;E11&quot;</span><span class="p">],</span></div><div class='line' id='LC110'><span class="p">[</span><span class="s2">&quot;Flora Price&quot;</span><span class="p">,</span><span class="s2">&quot;E9&quot;</span><span class="p">],[</span><span class="s2">&quot;Flora Price&quot;</span><span class="p">,</span><span class="s2">&quot;E11&quot;</span><span class="p">]]);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.generators.social.davis_southern_women_graph&quot;</span><span class="p">,</span><span class="nx">Dc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.davis_southern_women_graph&quot;</span><span class="p">,</span><span class="nx">Dc</span><span class="p">);</span></div><div class='line' id='LC111'><span class="kd">function</span> <span class="nx">Ec</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">O</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;Acciaiuoli&quot;</span><span class="p">,</span><span class="s2">&quot;Medici&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;Castellani&quot;</span><span class="p">,</span><span class="s2">&quot;Peruzzi&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;Castellani&quot;</span><span class="p">,</span><span class="s2">&quot;Strozzi&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;Castellani&quot;</span><span class="p">,</span><span class="s2">&quot;Barbadori&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;Medici&quot;</span><span class="p">,</span><span class="s2">&quot;Barbadori&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;Medici&quot;</span><span class="p">,</span><span class="s2">&quot;Ridolfi&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;Medici&quot;</span><span class="p">,</span><span class="s2">&quot;Tornabuoni&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;Medici&quot;</span><span class="p">,</span><span class="s2">&quot;Albizzi&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;Medici&quot;</span><span class="p">,</span><span class="s2">&quot;Salviati&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;Salviati&quot;</span><span class="p">,</span><span class="s2">&quot;Pazzi&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;Peruzzi&quot;</span><span class="p">,</span><span class="s2">&quot;Strozzi&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;Peruzzi&quot;</span><span class="p">,</span><span class="s2">&quot;Bischeri&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;Strozzi&quot;</span><span class="p">,</span><span class="s2">&quot;Ridolfi&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;Strozzi&quot;</span><span class="p">,</span><span class="s2">&quot;Bischeri&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;Ridolfi&quot;</span><span class="p">,</span><span class="s2">&quot;Tornabuoni&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;Tornabuoni&quot;</span><span class="p">,</span><span class="s2">&quot;Guadagni&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;Albizzi&quot;</span><span class="p">,</span><span class="s2">&quot;Ginori&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;Albizzi&quot;</span><span class="p">,</span><span class="s2">&quot;Guadagni&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;Bischeri&quot;</span><span class="p">,</span></div><div class='line' id='LC112'><span class="s2">&quot;Guadagni&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;Guadagni&quot;</span><span class="p">,</span><span class="s2">&quot;Lamberteschi&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.generators.social.florentine_families_graph&quot;</span><span class="p">,</span><span class="nx">Ec</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.florentine_families_graph&quot;</span><span class="p">,</span><span class="nx">Ec</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Fc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;Directed Graph not supported&quot;</span><span class="p">));</span><span class="k">return</span> <span class="nx">Gc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Gc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">qc</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">nodes</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;adjacencylist&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="o">!=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;invalid graph_description&quot;</span><span class="p">));</span><span class="nx">M</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">M</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">)})})}</span><span class="k">else</span><span class="s2">&quot;edgelist&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">;(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">||</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="o">||</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;invalid graph_description&quot;</span><span class="p">));</span><span class="nx">f</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)});</span><span class="nx">f</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">f</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.generators.small.make_small_graph&quot;</span><span class="p">,</span><span class="nx">Gc</span><span class="p">);</span></div><div class='line' id='LC113'><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.make_small_graph&quot;</span><span class="p">,</span><span class="nx">Gc</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Hc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">Fc</span><span class="p">([</span><span class="s2">&quot;adjacencylist&quot;</span><span class="p">,</span><span class="s2">&quot;Bull Graph&quot;</span><span class="p">,</span><span class="mi">5</span><span class="p">,[[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">],[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">],[</span><span class="mi">2</span><span class="p">],[</span><span class="mi">3</span><span class="p">]]],</span><span class="nx">a</span><span class="p">)}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.generators.small.bull_graph&quot;</span><span class="p">,</span><span class="nx">Hc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.bull_graph&quot;</span><span class="p">,</span><span class="nx">Hc</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Ic</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">Fc</span><span class="p">([</span><span class="s2">&quot;adjacencylist&quot;</span><span class="p">,</span><span class="s2">&quot;Krackhardt Kite Social Network&quot;</span><span class="p">,</span><span class="mi">10</span><span class="p">,[[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">],[</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">],[</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">],[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">],[</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">7</span><span class="p">],[</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">],[</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">8</span><span class="p">],[</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">9</span><span class="p">],[</span><span class="mi">8</span><span class="p">,</span><span class="mi">10</span><span class="p">],[</span><span class="mi">9</span><span class="p">]]],</span><span class="nx">a</span><span class="p">)}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.generators.small.krackhardt_kite_graph&quot;</span><span class="p">,</span><span class="nx">Ic</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.krackhardt_kite_graph&quot;</span><span class="p">,</span><span class="nx">Ic</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Jc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;triangles() is not defined for directed graphs.&quot;</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">m</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">Kc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">).</span><span class="nx">next</span><span class="p">()[</span><span class="mi">2</span><span class="p">]</span><span class="o">/</span><span class="mi">2</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{};</span><span class="nx">E</span><span class="p">(</span><span class="nx">Kc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">/</span><span class="mi">2</span><span class="p">)});</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.cluster.triangles&quot;</span><span class="p">,</span><span class="nx">Jc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.triangles&quot;</span><span class="p">,</span><span class="nx">Jc</span><span class="p">);</span></div><div class='line' id='LC114'><span class="kd">function</span> <span class="nx">Kc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">n</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;Not defined for multigraphs.&quot;</span><span class="p">));</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">S</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">)]})</span><span class="o">:</span><span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">adj</span><span class="p">);</span><span class="k">return</span> <span class="nx">Ua</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">V</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">])),</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">E</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">V</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">)));</span><span class="nx">d</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">f</span><span class="o">+=</span><span class="nx">Rb</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">).</span><span class="nx">f</span><span class="p">()});</span><span class="k">return</span><span class="p">[</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">c</span><span class="p">.</span><span class="nx">f</span><span class="p">(),</span><span class="nx">f</span><span class="p">]})}</span></div><div class='line' id='LC115'><span class="kd">function</span> <span class="nx">Lc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">n</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;Not defined for multigraphs.&quot;</span><span class="p">));</span><span class="nx">u</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;weight&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">p</span><span class="p">().</span><span class="nx">length</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">qb</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">p</span><span class="p">(</span><span class="nx">k</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">)});</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">S</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">)]})</span><span class="o">:</span><span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">adj</span><span class="p">);</span><span class="k">return</span> <span class="nx">Ua</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="k">new</span> <span class="nx">V</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]));</span><span class="nx">g</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="k">new</span> <span class="nx">V</span><span class="p">;</span><span class="nx">E</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">f</span><span class="p">)[</span><span class="nx">b</span><span class="p">],</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="nx">d</span><span class="p">;</span><span class="nx">n</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">Sb</span><span class="p">(</span><span class="k">new</span> <span class="nx">V</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">))),</span><span class="nx">n</span><span class="p">);</span><span class="nx">E</span><span class="p">(</span><span class="nx">Rb</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">C</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">)[</span><span class="nx">g</span><span class="p">],</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="nx">d</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">f</span><span class="p">)[</span><span class="nx">g</span><span class="p">],</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="nx">d</span><span class="p">;</span><span class="nx">m</span><span class="o">+=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">e</span><span class="o">*</span><span class="nx">n</span><span class="o">*</span><span class="nx">g</span><span class="p">,</span><span class="mi">1</span><span class="o">/</span><span class="mi">3</span><span class="p">)})});</span><span class="k">return</span><span class="p">[</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">f</span><span class="p">(),</span><span class="mi">2</span><span class="o">*</span><span class="nx">m</span><span class="p">]})}</span></div><div class='line' id='LC116'><span class="kd">function</span> <span class="nx">Mc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="mi">2</span><span class="o">===</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">u</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="mi">3</span><span class="o">===</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="p">);</span><span class="nx">d</span><span class="o">!=</span><span class="nx">l</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">k</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">ab</span><span class="p">(</span><span class="nx">Nc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">));</span><span class="nx">d</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">sa</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">}));</span><span class="k">return</span> <span class="nx">L</span><span class="p">.</span><span class="nx">v</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">/</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.cluster.average_clustering&quot;</span><span class="p">,</span><span class="nx">Mc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.average_clustering&quot;</span><span class="p">,</span><span class="nx">Mc</span><span class="p">);</span></div><div class='line' id='LC117'><span class="kd">function</span> <span class="nx">Nc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;Clustering algorithms are not defined for directed graphs.&quot;</span><span class="p">));</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">Lc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">Kc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">{};</span><span class="nx">E</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span><span class="o">=</span><span class="mi">0</span><span class="o">===</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">/</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">))});</span><span class="k">return</span> <span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">m</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">ab</span><span class="p">(</span><span class="nx">d</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">d</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.cluster.clustering&quot;</span><span class="p">,</span><span class="nx">Nc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.clustering&quot;</span><span class="p">,</span><span class="nx">Nc</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Oc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">E</span><span class="p">(</span><span class="nx">Kc</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="o">+=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="nx">b</span><span class="o">+=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]});</span><span class="k">return</span> <span class="mi">0</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">b</span><span class="o">/</span><span class="nx">c</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.cluster.transitivity&quot;</span><span class="p">,</span><span class="nx">Oc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.transitivity&quot;</span><span class="p">,</span><span class="nx">Oc</span><span class="p">);</span></div><div class='line' id='LC118'><span class="kd">function</span> <span class="nx">Pc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">==</span><span class="nx">l</span><span class="o">?</span><span class="nx">kb</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="p">{};</span><span class="nx">E</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">E</span><span class="p">(</span><span class="nx">rb</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">))),</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">Rb</span><span class="p">(</span><span class="k">new</span> <span class="nx">V</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">m</span><span class="p">))),</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">g</span><span class="p">)));</span><span class="nx">n</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">f</span><span class="p">();</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">+=</span><span class="nx">n</span><span class="p">;</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">n</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span><span class="nx">g</span> <span class="k">in</span> <span class="nx">y</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">x</span><span class="o">+=</span><span class="mi">1</span><span class="p">);</span><span class="nx">c</span><span class="o">+=</span><span class="p">(</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">m</span><span class="p">))</span><span class="o">-</span><span class="nx">x</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">g</span><span class="p">))</span><span class="o">-</span><span class="nx">x</span><span class="p">)</span><span class="o">+</span><span class="nx">n</span><span class="p">});</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">/=</span><span class="nx">c</span><span class="p">)});</span><span class="k">return</span> <span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">m</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">ab</span><span class="p">(</span><span class="nx">d</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">d</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.cluster.square_clustering&quot;</span><span class="p">,</span><span class="nx">Pc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.square_clustering&quot;</span><span class="p">,</span><span class="nx">Pc</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Qc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">{},</span><span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">V</span><span class="p">;</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">s</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">V</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]));</span><span class="nx">e</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">f</span><span class="p">();</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span><span class="o">=</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span><span class="o">=</span><span class="nx">e</span><span class="p">});</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">V</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">c</span><span class="p">)),</span><span class="nx">f</span><span class="o">=</span><span class="nx">Sb</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="k">new</span> <span class="nx">V</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="p">[],</span><span class="nx">n</span><span class="o">=</span><span class="p">[];</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="mi">0</span><span class="o">===</span><span class="nx">f</span><span class="p">.</span><span class="nx">f</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">===</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">B</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">y</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">f</span><span class="p">())</span><span class="nx">a</span><span class="o">=</span><span class="nx">Ta</span><span class="p">(</span><span class="nx">f</span><span class="p">).</span><span class="nx">next</span><span class="p">(),</span><span class="nx">f</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">g</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">f</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="nx">n</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">next</span><span class="p">()}</span><span class="nx">n</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">N</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">C</span><span class="o">=</span><span class="nx">Rb</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">N</span><span class="p">),</span><span class="nx">N</span><span class="o">=</span><span class="nx">Rb</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">N</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">C</span><span class="p">.</span><span class="nx">f</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">N</span><span class="p">.</span><span class="nx">f</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">y</span><span class="o">=</span><span class="nx">Fa</span><span class="p">(</span><span class="nx">n</span><span class="p">)),</span><span class="nx">n</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">y</span><span class="p">))</span><span class="k">return</span> <span class="nx">y</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">N</span><span class="p">.</span><span class="nx">f</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">===</span><span class="nx">C</span><span class="p">.</span><span class="nx">f</span><span class="p">())</span><span class="k">return</span> <span class="nx">y</span><span class="o">=</span></div><div class='line' id='LC119'><span class="nx">Ba</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">C</span><span class="p">.</span><span class="nx">z</span><span class="p">()),</span><span class="nx">n</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">y</span><span class="p">;</span><span class="kd">var</span> <span class="nx">Ja</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">f</span><span class="p">(),</span><span class="nx">ca</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">da</span><span class="p">,</span><span class="nx">Y</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">y</span><span class="o">=</span><span class="nx">Ta</span><span class="p">(</span><span class="nx">N</span><span class="p">);(</span><span class="nx">a</span><span class="o">=</span><span class="nx">Ya</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">l</span><span class="p">))</span><span class="o">!==</span><span class="nx">l</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">Rb</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]),</span><span class="nx">Y</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">(),</span><span class="nx">Y</span><span class="o">&gt;</span><span class="nx">ca</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">da</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">ca</span><span class="o">=</span><span class="nx">Y</span><span class="p">,</span><span class="nx">ca</span><span class="o">===</span><span class="nx">Ja</span><span class="p">)););</span><span class="k">if</span><span class="p">(</span><span class="nx">ca</span><span class="o">===</span><span class="nx">Ja</span><span class="p">)</span><span class="k">return</span> <span class="nx">n</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">next</span><span class="p">();</span><span class="nx">b</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">y</span><span class="o">=</span><span class="nx">Ta</span><span class="p">(</span><span class="nx">C</span><span class="p">);(</span><span class="nx">a</span><span class="o">=</span><span class="nx">Ya</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">l</span><span class="p">))</span><span class="o">!==</span><span class="nx">l</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">Rb</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]),</span><span class="nx">Y</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">(),</span><span class="nx">Y</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">Y</span><span class="p">,</span><span class="nx">b</span><span class="o">===</span><span class="nx">Ja</span><span class="o">-</span><span class="mi">1</span><span class="p">)););</span><span class="nx">ca</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">da</span><span class="p">);</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">f</span><span class="p">]);</span><span class="nx">e</span><span class="o">=</span><span class="nx">C</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">N</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">Sb</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">next</span><span class="p">()};</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.clique.find_cliques&quot;</span><span class="p">,</span><span class="nx">Qc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.find_cliques&quot;</span><span class="p">,</span><span class="nx">Qc</span><span class="p">);</span></div><div class='line' id='LC120'><span class="kd">function</span> <span class="nx">Rc</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{};</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">s</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">V</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]));</span><span class="nx">c</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span><span class="o">=</span><span class="nx">c</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="nx">bb</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span><span class="p">[];</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">V</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">V</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">[];</span><span class="nx">Sc</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,[],</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.clique.find_cliques_recursive&quot;</span><span class="p">,</span><span class="nx">Rc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.find_cliques_recursive&quot;</span><span class="p">,</span><span class="nx">Rc</span><span class="p">);</span></div><div class='line' id='LC121'><span class="kd">function</span> <span class="nx">Sc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">f</span><span class="p">(),</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">Ta</span><span class="p">(</span><span class="nx">c</span><span class="p">);(</span><span class="nx">x</span><span class="o">=</span><span class="nx">Ya</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">l</span><span class="p">))</span><span class="o">!==</span><span class="nx">l</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="o">=</span><span class="nx">Rb</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">x</span><span class="p">]),</span><span class="nx">y</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">f</span><span class="p">(),</span><span class="nx">y</span><span class="o">&gt;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">x</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">y</span><span class="p">,</span><span class="nx">y</span><span class="o">===</span><span class="nx">g</span><span class="p">))</span><span class="k">return</span><span class="p">;</span><span class="nx">E</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">Rb</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">f</span><span class="p">();</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">)});</span><span class="nx">g</span><span class="o">=</span><span class="nx">Sb</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="nx">E</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="nx">f</span><span class="o">=</span><span class="nx">Rb</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="nx">Rb</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">K</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">K</span><span class="p">()</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">Fa</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">K</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">===</span><span class="nx">f</span><span class="p">.</span><span class="nx">f</span><span class="p">()</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">Ba</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">z</span><span class="p">()))</span><span class="o">:</span><span class="nx">Sc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">pop</span><span class="p">())})}</span><span class="kd">function</span> <span class="nx">Tc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">Qc</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">M</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span><span class="nx">c</span><span class="p">});</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.clique.graph_clique_number&quot;</span><span class="p">,</span><span class="nx">Tc</span><span class="p">);</span></div><div class='line' id='LC122'><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.graph_clique_number&quot;</span><span class="p">,</span><span class="nx">Tc</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Uc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">Qc</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">return</span> <span class="nx">Q</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">length</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.clique.graph_number_of_cliques&quot;</span><span class="p">,</span><span class="nx">Uc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.graph_number_of_cliques&quot;</span><span class="p">,</span><span class="nx">Uc</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Vc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">Xa</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">Xa</span><span class="p">(</span><span class="nx">Qc</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodes</span><span class="p">());</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">ga</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="nx">d</span><span class="o">=</span><span class="p">{},</span><span class="nx">A</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">sa</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">&lt;=</span><span class="nx">ra</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">ra</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">)}).</span><span class="nx">length</span><span class="p">});</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">sa</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">&lt;=</span><span class="nx">ra</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">ra</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">)}).</span><span class="nx">length</span><span class="p">}</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.clique.number_of_cliques&quot;</span><span class="p">,</span><span class="nx">Vc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.number_of_cliques&quot;</span><span class="p">,</span><span class="nx">Vc</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Wc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">D</span><span class="p">()</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">D</span><span class="p">())</span><span class="k">return</span> <span class="nx">p</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">t</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="nx">Jc</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">Vc</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="nx">g</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">]]);</span><span class="nx">g</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!==</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">!==</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]});</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">t</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="nx">Jc</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">Vc</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">]]);</span><span class="nx">m</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!==</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">!==</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]});</span><span class="k">return</span><span class="o">!</span><span class="nx">Ia</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">Ia</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)})</span><span class="o">?</span><span class="nx">p</span><span class="o">:</span><span class="nx">k</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.isomorphism.could_be_isomorphic&quot;</span><span class="p">,</span><span class="nx">Wc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.could_be_isomorphic&quot;</span><span class="p">,</span><span class="nx">Wc</span><span class="p">);</span></div><div class='line' id='LC123'><span class="kd">function</span> <span class="nx">Xc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">D</span><span class="p">()</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">D</span><span class="p">())</span><span class="k">return</span> <span class="nx">p</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">t</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="nx">Jc</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">]]);</span><span class="nx">f</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!==</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]});</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">t</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="nx">Jc</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="nx">g</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">]]);</span><span class="nx">g</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!==</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]});</span><span class="k">return</span><span class="o">!</span><span class="nx">Ia</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">Ia</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)})</span><span class="o">?</span><span class="nx">p</span><span class="o">:</span><span class="nx">k</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.isomorphism.fast_could_be_isomorphic&quot;</span><span class="p">,</span><span class="nx">Xc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.fast_could_be_isomorphic&quot;</span><span class="p">,</span><span class="nx">Xc</span><span class="p">);</span></div><div class='line' id='LC124'><span class="kd">function</span> <span class="nx">Yc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">D</span><span class="p">()</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">D</span><span class="p">())</span><span class="k">return</span> <span class="nx">p</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">ab</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">t</span><span class="p">());</span><span class="nx">c</span><span class="p">.</span><span class="nx">sort</span><span class="p">();</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">ab</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">t</span><span class="p">());</span><span class="nx">d</span><span class="p">.</span><span class="nx">sort</span><span class="p">();</span><span class="k">return</span><span class="o">!</span><span class="nx">Ia</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">p</span><span class="o">:</span><span class="nx">k</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.isomorphism.faster_could_be_isomorphic&quot;</span><span class="p">,</span><span class="nx">Yc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.faster_could_be_isomorphic&quot;</span><span class="p">,</span><span class="nx">Yc</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Zc</span><span class="p">(){}</span><span class="nx">Zc</span><span class="p">.</span><span class="nx">ma</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Zc</span><span class="p">.</span><span class="nx">oa</span><span class="o">?</span><span class="nx">Zc</span><span class="p">.</span><span class="nx">oa</span><span class="o">:</span><span class="nx">Zc</span><span class="p">.</span><span class="nx">oa</span><span class="o">=</span><span class="k">new</span> <span class="nx">Zc</span><span class="p">};</span><span class="nx">Zc</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Ja</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">Zc</span><span class="p">.</span><span class="nx">ma</span><span class="p">();</span><span class="kd">function</span> <span class="nx">$c</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="nx">p</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]))</span><span class="k">return</span> <span class="nx">p</span><span class="p">;</span><span class="k">return</span> <span class="nx">k</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.utils.misc.is_list_of_ints&quot;</span><span class="p">,</span><span class="nx">$c</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.utils.is_list_of_ints&quot;</span><span class="p">,</span><span class="nx">$c</span><span class="p">);</span><span class="kd">function</span> <span class="nx">ad</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">Ua</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">+=</span><span class="nx">a</span><span class="p">})}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.utils.misc.cumulative_sum&quot;</span><span class="p">,</span><span class="nx">ad</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.utils.cumulative_sum&quot;</span><span class="p">,</span><span class="nx">ad</span><span class="p">);</span><span class="kd">function</span> <span class="nx">bd</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">Zc</span><span class="p">.</span><span class="nx">ma</span><span class="p">().</span><span class="nx">Ja</span><span class="o">++</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="mi">36</span><span class="p">)}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.utils.misc.generate_unique_node&quot;</span><span class="p">,</span><span class="nx">bd</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.utils.generate_unique_node&quot;</span><span class="p">,</span><span class="nx">bd</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Bc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;eg&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">cd</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">==</span><span class="nx">l</span><span class="o">||</span><span class="s2">&quot;hh&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">dd</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">ac</span><span class="p">(</span><span class="s2">&quot;`opt_method` must be &#39;eg&#39; or &#39;hh&#39;&quot;</span><span class="p">))}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.graphical.is_valid_degree_sequence&quot;</span><span class="p">,</span><span class="nx">Bc</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.is_valid_degree_sequence&quot;</span><span class="p">,</span><span class="nx">Bc</span><span class="p">);</span><span class="kd">function</span> <span class="nx">dd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="nx">k</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">$c</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="o">&gt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="o">!==</span><span class="nx">L</span><span class="p">.</span><span class="nx">v</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="p">)</span><span class="k">return</span> <span class="nx">p</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">Fa</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;){</span><span class="nx">z</span><span class="p">.</span><span class="nx">sort</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">Oa</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="k">break</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">k</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">c</span><span class="o">--</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">-=</span><span class="mi">1</span><span class="p">}</span><span class="k">return</span> <span class="nx">p</span><span class="p">}</span></div><div class='line' id='LC125'><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.graphical.is_valid_degree_sequence_havel_hakimi&quot;</span><span class="p">,</span><span class="nx">dd</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.is_valid_degree_sequence_havel_hakimi&quot;</span><span class="p">,</span><span class="nx">dd</span><span class="p">);</span></div><div class='line' id='LC126'><span class="kd">function</span> <span class="nx">cd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="nx">k</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">$c</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="o">&gt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="o">!==</span><span class="nx">L</span><span class="p">.</span><span class="nx">v</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="p">)</span><span class="k">return</span> <span class="nx">p</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">Fa</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">-</span><span class="nx">a</span><span class="p">}),</span><span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">v</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">])),</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">*</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="nx">L</span><span class="p">.</span><span class="nx">v</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">Xa</span><span class="p">(</span><span class="nx">Ua</span><span class="p">(</span><span class="nx">R</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">b</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">])}))),</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">)</span><span class="k">return</span> <span class="nx">p</span><span class="p">;</span><span class="k">return</span> <span class="nx">k</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.graphical.is_valid_degree_sequence_erdos_gallai&quot;</span><span class="p">,</span><span class="nx">cd</span><span class="p">);</span></div><div class='line' id='LC127'><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.is_valid_degree_sequence_erdos_gallai&quot;</span><span class="p">,</span><span class="nx">cd</span><span class="p">);</span><span class="kd">function</span> <span class="nx">ed</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">fd</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">k</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span> <span class="k">instanceof</span> <span class="nx">dc</span><span class="p">)</span><span class="k">return</span> <span class="nx">p</span><span class="p">;</span><span class="nx">h</span><span class="p">(</span><span class="nx">b</span><span class="p">)}}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.dag.is_directed_acyclic_graph&quot;</span><span class="p">,</span><span class="nx">ed</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.is_directed_acyclic_graph&quot;</span><span class="p">,</span><span class="nx">ed</span><span class="p">);</span></div><div class='line' id='LC128'><span class="kd">function</span> <span class="nx">fd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">()</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;Topological sort not defined on undirected graphs.&quot;</span><span class="p">));</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{},</span><span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="p">{};</span><span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">A</span><span class="p">());</span><span class="nx">M</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">e</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="k">else</span><span class="p">{</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="p">[];</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">e</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">dc</span><span class="p">(</span><span class="s2">&quot;Graph contains a cycle&quot;</span><span class="p">)),</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">))});</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">m</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">,</span><span class="nx">Ga</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">aa</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">toString</span><span class="p">()))}}});</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.dag.topological_sort&quot;</span><span class="p">,</span><span class="nx">fd</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.topological_sort&quot;</span><span class="p">,</span><span class="nx">fd</span><span class="p">);</span></div><div class='line' id='LC129'><span class="kd">function</span> <span class="nx">gd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">n</span><span class="p">))</span><span class="nx">b</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">ra</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">n</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">dc</span><span class="p">(</span><span class="s2">&quot;Graph contains a cycle&quot;</span><span class="p">));</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">n</span><span class="p">))</span><span class="k">return</span> <span class="nx">p</span><span class="p">});</span><span class="nx">Ga</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">aa</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">toString</span><span class="p">());</span><span class="k">return</span> <span class="nx">k</span><span class="p">}</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">()</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;Topological sort not defined on undirected graphs.&quot;</span><span class="p">));</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">V</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">A</span><span class="p">());</span><span class="nx">M</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">ra</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">))</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">dc</span><span class="p">(</span><span class="s2">&quot;Graph contains a cycle&quot;</span><span class="p">))});</span><span class="k">return</span> <span class="nx">e</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.dag.topological_sort_recursive&quot;</span><span class="p">,</span><span class="nx">gd</span><span class="p">);</span></div><div class='line' id='LC130'><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.topological_sort_recursive&quot;</span><span class="p">,</span><span class="nx">gd</span><span class="p">);</span><span class="kd">var</span> <span class="nx">id</span><span class="o">=</span><span class="kd">function</span> <span class="nx">hd</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="p">()</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;is_aperiodic not defined for undirected graphs.&quot;</span><span class="p">));</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">A</span><span class="p">().</span><span class="nx">next</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="p">{};</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="p">[];</span><span class="nx">A</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">x</span><span class="p">){</span><span class="nx">x</span> <span class="k">in</span> <span class="nx">d</span><span class="o">?</span><span class="nx">e</span><span class="o">=</span><span class="nx">xb</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">-</span><span class="nx">d</span><span class="p">[</span><span class="nx">x</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">x</span><span class="p">),</span><span class="nx">d</span><span class="p">[</span><span class="nx">x</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">)})});</span><span class="nx">c</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="o">+=</span><span class="mi">1</span><span class="p">}</span><span class="k">return</span> <span class="nx">nb</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">===</span><span class="nx">nb</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="mi">1</span><span class="o">===</span><span class="nx">e</span><span class="o">:</span><span class="mi">1</span><span class="o">===</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">hd</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">B</span><span class="p">(</span><span class="nx">Sb</span><span class="p">(</span><span class="k">new</span> <span class="nx">V</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodes</span><span class="p">()),</span><span class="nx">H</span><span class="p">(</span><span class="nx">d</span><span class="p">))))};</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.dag.is_aperiodic&quot;</span><span class="p">,</span><span class="nx">id</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.is_aperiodic&quot;</span><span class="p">,</span><span class="nx">id</span><span class="p">);</span><span class="kd">function</span> <span class="nx">jd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">pa</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ja</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="nx">jd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getKey</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pa</span><span class="p">};</span><span class="nx">jd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">N</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">jd</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pa</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ja</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">kd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">q</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="o">:</span><span class="p">{</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">kd</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">fa</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">z</span><span class="p">(),</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">()){</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">q</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">jd</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]));</span><span class="k">break</span> <span class="nx">a</span><span class="p">}}</span><span class="k">else</span> <span class="nx">b</span><span class="o">=</span><span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">ab</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">ld</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">])}}</span><span class="kd">function</span> <span class="nx">ld</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">q</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">jd</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">));</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">q</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="o">&gt;&gt;</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">getKey</span><span class="p">()</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">getKey</span><span class="p">())</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">else</span> <span class="k">break</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">}</span><span class="nx">q</span><span class="o">=</span><span class="nx">kd</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span></div><div class='line' id='LC131'><span class="nx">q</span><span class="p">.</span><span class="nx">remove</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">q</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">b</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="nx">xa</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">q</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">d</span><span class="o">&gt;&gt;</span><span class="mi">1</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">a</span><span class="o">+</span><span class="mi">2</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">getKey</span><span class="p">()</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">getKey</span><span class="p">()</span><span class="o">?</span><span class="nx">g</span><span class="o">:</span><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">getKey</span><span class="p">()</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">getKey</span><span class="p">())</span><span class="k">break</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">}</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">}</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">ja</span><span class="p">}};</span><span class="nx">q</span><span class="p">.</span><span class="nx">z</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">q</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">ja</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span><span class="nx">q</span><span class="p">.</span><span class="nx">fa</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">q</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">getKey</span><span class="p">());</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span></div><div class='line' id='LC132'><span class="nx">q</span><span class="p">.</span><span class="nx">la</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">va</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">q</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">getKey</span><span class="p">()</span><span class="o">==</span><span class="nx">a</span><span class="p">})};</span><span class="nx">q</span><span class="p">.</span><span class="nx">N</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">kd</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="nx">q</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">q</span><span class="p">.</span><span class="nx">length</span><span class="p">};</span><span class="nx">q</span><span class="p">.</span><span class="nx">K</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="mi">0</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">q</span><span class="p">.</span><span class="nx">length</span><span class="p">};</span><span class="nx">q</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">xa</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">q</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">md</span><span class="p">(){</span><span class="nx">kd</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)}</span><span class="nx">qa</span><span class="p">(</span><span class="nx">md</span><span class="p">,</span><span class="nx">kd</span><span class="p">);</span><span class="kd">function</span> <span class="nx">nd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">ld</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">od</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">{});</span><span class="s2">&quot;object&quot;</span><span class="o">!==</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The arg_dict argument must be an object.&quot;</span><span class="p">));</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">lb</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodes</span><span class="p">();</span><span class="s2">&quot;k&quot;</span><span class="k">in</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">Ra</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">k</span><span class="p">));</span><span class="nx">M</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">sort</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;weight&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">)</span><span class="o">===</span><span class="nx">l</span><span class="o">?</span><span class="nx">pd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">qd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">weight</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;endpoints&quot;</span><span class="p">,</span><span class="nx">p</span><span class="p">)</span><span class="o">?</span><span class="nx">rd</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">sd</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">)});</span><span class="k">return</span> <span class="nx">c</span><span class="o">=</span><span class="nx">td</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">nb</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">J</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;normalized&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">(),</span><span class="nx">J</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;k&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">))}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.centrality.betweenness.betweenness_centrality&quot;</span><span class="p">,</span><span class="nx">od</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.betweenness_centrality&quot;</span><span class="p">,</span><span class="nx">od</span><span class="p">);</span></div><div class='line' id='LC133'><span class="kd">function</span> <span class="nx">ud</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">{});</span><span class="s2">&quot;object&quot;</span><span class="o">!==</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The arg_dict argument must be an object.&quot;</span><span class="p">));</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">lb</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">tb</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">lb</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">p</span><span class="p">()));</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodes</span><span class="p">();</span><span class="nx">M</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">sort</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;weight&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">)</span><span class="o">===</span><span class="nx">l</span><span class="o">?</span><span class="nx">pd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">qd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">weight</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">vd</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">d</span><span class="p">)});</span><span class="nx">M</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">sort</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">delete</span> <span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]});</span><span class="k">return</span> <span class="nx">c</span><span class="o">=</span><span class="nx">wd</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">nb</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">J</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;normalized&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">())}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.centrality.betweenness.edge_betweenness_centrality&quot;</span><span class="p">,</span><span class="nx">ud</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.edge_betweenness_centrality&quot;</span><span class="p">,</span><span class="nx">ud</span><span class="p">);</span></div><div class='line' id='LC134'><span class="kd">function</span> <span class="nx">pd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="p">{};</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodes</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">[]});</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">lb</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="p">{};</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">m</span><span class="p">],</span><span class="nx">x</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">m</span><span class="p">];</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">L</span><span class="p">(</span><span class="nx">m</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">f</span><span class="o">||</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">==</span><span class="nx">n</span><span class="o">+</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">+=</span><span class="nx">x</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">m</span><span class="p">))})}</span><span class="k">return</span><span class="p">[</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">]}</span></div><div class='line' id='LC135'><span class="kd">function</span> <span class="nx">qd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="p">{};</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodes</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">[]});</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">lb</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="p">{};</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="p">{};</span><span class="nx">m</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="k">new</span> <span class="nx">md</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">nd</span><span class="p">(</span><span class="nx">n</span><span class="p">,[</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">]);</span><span class="o">!</span><span class="nx">n</span><span class="p">.</span><span class="nx">K</span><span class="p">();){</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">q</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">q</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">getKey</span><span class="p">();</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">C</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">C</span> <span class="k">in</span> <span class="nx">g</span><span class="o">||</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">C</span><span class="p">]</span><span class="o">+=</span><span class="nx">f</span><span class="p">[</span><span class="nx">y</span><span class="p">],</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">C</span><span class="p">),</span><span class="nx">g</span><span class="p">[</span><span class="nx">C</span><span class="p">]</span><span class="o">=</span><span class="nx">x</span><span class="p">,</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">a</span><span class="o">=</span><span class="nx">x</span><span class="o">+</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="o">!</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">g</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">m</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="o">?</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">ld</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">a</span><span class="p">,[</span><span class="nx">C</span><span class="p">,</span><span class="nx">b</span><span class="p">]),</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="nx">C</span><span class="p">])</span><span class="o">:</span><span class="nx">a</span><span class="o">==</span><span class="nx">m</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">+=</span><span class="nx">f</span><span class="p">[</span><span class="nx">C</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">C</span><span class="p">))}))}</span><span class="k">return</span><span class="p">[</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">]}</span></div><div class='line' id='LC136'><span class="kd">function</span> <span class="nx">sd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">lb</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">m</span><span class="o">=</span><span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">])</span><span class="o">/</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="nx">M</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">+=</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">*</span><span class="nx">m</span><span class="p">});</span><span class="nx">g</span><span class="o">!=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">+=</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">])}</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">rd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">+=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">lb</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">m</span><span class="o">=</span><span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">])</span><span class="o">/</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="nx">M</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">+=</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">*</span><span class="nx">m</span><span class="p">});</span><span class="nx">g</span><span class="o">!=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">+=</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="p">)}</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">vd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">lb</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">m</span><span class="o">=</span><span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">])</span><span class="o">/</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="nx">M</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">*</span><span class="nx">m</span><span class="p">;[</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">]</span><span class="k">in</span> <span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="p">[[</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">]]</span><span class="o">+=</span><span class="nx">c</span><span class="o">:</span><span class="nx">a</span><span class="p">[[</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="p">]]</span><span class="o">+=</span><span class="nx">c</span><span class="p">;</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">+=</span><span class="nx">c</span><span class="p">});</span><span class="nx">g</span><span class="o">!=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">+=</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">])}</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span></div><div class='line' id='LC137'><span class="kd">function</span> <span class="nx">td</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="p">;</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">?</span><span class="mi">2</span><span class="o">&lt;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="o">/</span><span class="p">((</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="mi">2</span><span class="p">)))</span><span class="o">:</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mf">0.5</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">(</span><span class="nx">f</span><span class="p">)){</span><span class="nx">e</span><span class="o">!=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="o">*</span><span class="nx">b</span><span class="o">/</span><span class="nx">e</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">*=</span><span class="nx">f</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">wd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">;</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">?</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">1</span><span class="o">/</span><span class="p">(</span><span class="nx">b</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="p">)))</span><span class="o">:</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mf">0.5</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">*=</span><span class="nx">e</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="kd">function</span> <span class="nx">xd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">{},</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">G</span><span class="p">(</span><span class="nx">f</span><span class="p">);){</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="p">{};</span><span class="nx">F</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">d</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">K</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">c</span><span class="p">)))});</span><span class="k">if</span><span class="p">(</span><span class="nx">ia</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&lt;=</span><span class="nx">e</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="nx">e</span><span class="o">+=</span><span class="mi">1</span><span class="p">}</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.shortest_paths.unweighted.single_source_shortest_path_length&quot;</span><span class="p">,</span><span class="nx">xd</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.single_source_shortest_path_length&quot;</span><span class="p">,</span><span class="nx">xd</span><span class="p">);</span><span class="kd">function</span> <span class="nx">yd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{};</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">xd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">)});</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.shortest_paths.unweighted.all_pairs_shortest_path_length&quot;</span><span class="p">,</span><span class="nx">yd</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.all_pairs_shortest_path_length&quot;</span><span class="p">,</span><span class="nx">yd</span><span class="p">);</span></div><div class='line' id='LC138'><span class="kd">function</span> <span class="nx">zd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="p">();</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">toString</span><span class="p">();</span><span class="nx">c</span><span class="o">=</span><span class="nx">Ad</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[];</span><span class="nx">c</span><span class="o">!=</span><span class="nx">l</span><span class="p">;)</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">]];</span><span class="nx">c</span><span class="o">!=</span><span class="nx">l</span><span class="p">;)</span><span class="nx">d</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.shortest_paths.unweighted.bidirectional_shortest_path&quot;</span><span class="p">,</span><span class="nx">zd</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.bidirectional_shortest_path&quot;</span><span class="p">,</span><span class="nx">zd</span><span class="p">);</span></div><div class='line' id='LC139'><span class="kd">function</span> <span class="nx">Ad</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){(</span><span class="o">!</span><span class="nx">s</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||!</span><span class="nx">s</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">ac</span><span class="p">(</span><span class="s2">&quot;Bidirectional shortest path called without source or target&quot;</span><span class="p">));</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">{},</span><span class="nx">e</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">l</span><span class="p">,[</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">];</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">()</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">sa</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ia</span><span class="p">)</span><span class="o">:</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Y</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;!</span><span class="nx">y</span><span class="p">;)</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;=</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="p">(</span><span class="nx">x</span><span class="o">=</span><span class="nx">m</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="p">[],</span><span class="nx">A</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">y</span><span class="o">||</span><span class="nx">E</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">y</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">d</span><span class="o">||</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">y</span><span class="o">=</span><span class="p">[</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">]))})}))</span><span class="o">:</span><span class="p">(</span><span class="nx">x</span><span class="o">=</span><span class="nx">n</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="p">[],</span><span class="nx">A</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">y</span><span class="o">||</span><span class="nx">E</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">y</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">e</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)),</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">y</span><span class="o">=</span><span class="p">[</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">]))})}));</span></div><div class='line' id='LC140'><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">)</span><span class="k">return</span> <span class="nx">y</span><span class="p">;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">ec</span><span class="p">(</span><span class="s2">&quot;No path between &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; and &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">Bd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="p">();</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">{};</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">{};</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">f</span><span class="p">;</span><span class="k">for</span><span class="p">(;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">G</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">{},</span><span class="nx">F</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">f</span><span class="o">||</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">concat</span><span class="p">([</span><span class="nx">b</span><span class="p">]),</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">)})}),</span><span class="nx">d</span><span class="o">+=</span><span class="mi">1</span><span class="p">,</span><span class="nx">s</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&lt;=</span><span class="nx">d</span><span class="p">););</span><span class="k">return</span> <span class="nx">f</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.shortest_paths.unweighted.single_source_shortest_path&quot;</span><span class="p">,</span><span class="nx">Bd</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.single_source_shortest_path&quot;</span><span class="p">,</span><span class="nx">Bd</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Cd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{};</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">Bd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">)});</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span></div><div class='line' id='LC141'><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.shortest_paths.unweighted.all_pairs_shortest_path&quot;</span><span class="p">,</span><span class="nx">Cd</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.all_pairs_shortest_path&quot;</span><span class="p">,</span><span class="nx">Cd</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Dd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="p">();</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="p">{};</span><span class="nx">m</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">[];</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">f</span><span class="o">+=</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">g</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">[],</span><span class="nx">A</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">m</span><span class="o">?</span><span class="nx">m</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">===</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">m</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">))})}),</span><span class="nx">d</span><span class="o">!=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&lt;=</span><span class="nx">f</span><span class="p">););</span><span class="k">return</span> <span class="nx">c</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">toString</span><span class="p">(),</span><span class="nx">e</span><span class="o">?!</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">n</span><span class="p">)</span><span class="o">?</span><span class="p">[[],</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="p">[</span><span class="nx">n</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">m</span><span class="p">[</span><span class="nx">c</span><span class="p">]]</span><span class="o">:!</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">n</span><span class="p">)</span><span class="o">?</span><span class="p">[]</span><span class="o">:</span><span class="nx">n</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="o">:</span><span class="nx">e</span><span class="o">?</span><span class="p">[</span><span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="p">]</span><span class="o">:</span><span class="nx">n</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.algorithms.shortest_paths.unweighted.predecessor&quot;</span><span class="p">,</span><span class="nx">Dd</span><span class="p">);</span></div><div class='line' id='LC142'><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.predecessor&quot;</span><span class="p">,</span><span class="nx">Dd</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Ed</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">ja</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="p">{},</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">A</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">)}));</span><span class="k">return</span><span class="o">!</span><span class="nx">s</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">||</span><span class="nx">c</span><span class="o">?</span><span class="nx">Fd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">Gd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.relabel.relabel_nodes&quot;</span><span class="p">,</span><span class="nx">Ed</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.relabel_nodes&quot;</span><span class="p">,</span><span class="nx">Ed</span><span class="p">);</span></div><div class='line' id='LC143'><span class="kd">function</span> <span class="nx">Gd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">V</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">b</span><span class="p">)),</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">Rb</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">).</span><span class="nx">f</span><span class="p">()){</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">X</span><span class="p">(</span><span class="nx">ub</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="nx">c</span><span class="p">.</span><span class="nx">F</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">aa</span><span class="p">());</span><span class="k">try</span><span class="p">{</span><span class="nx">d</span><span class="o">=</span><span class="nx">fd</span><span class="p">(</span><span class="nx">c</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span> <span class="k">instanceof</span> <span class="nx">dc</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">dc</span><span class="p">(</span><span class="s2">&quot;The node label sets are overlapping and no ordering can resolve the mapping. Use copy=True.&quot;</span><span class="p">))}</span><span class="nx">d</span><span class="p">.</span><span class="nx">reverse</span><span class="p">()}</span><span class="k">else</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">n</span><span class="p">(),</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">(),</span><span class="nx">m</span><span class="p">;</span><span class="nx">E</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">m</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;Node &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; is not in the graph.&quot;</span><span class="p">)),</span><span class="nx">a</span><span class="p">.</span><span class="nx">I</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">c</span><span class="p">]),</span><span class="nx">f</span><span class="o">?</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">ta</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">p</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]]}),</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">Ba</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">ta</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">V</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]]}))))</span><span class="o">:</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span></div><div class='line' id='LC144'><span class="nx">ta</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">p</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]]}),</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">Ba</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">ta</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">V</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]]})))),</span><span class="nx">a</span><span class="p">.</span><span class="nx">R</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">m</span><span class="p">))});</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span></div><div class='line' id='LC145'><span class="kd">function</span> <span class="nx">Fd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">a</span><span class="p">.</span><span class="nx">constructor</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">name</span><span class="p">(</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">n</span><span class="p">()</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">Ua</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">J</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">J</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">db</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">])]}))</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">Ua</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">J</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">J</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nx">db</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">])]}));</span><span class="nx">c</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="nx">Ua</span><span class="p">(</span><span class="nx">kb</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">)}));</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">{},</span><span class="nx">e</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="nx">J</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">e</span><span class="p">)]</span><span class="o">=</span><span class="nx">db</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">e</span><span class="p">]);</span><span class="nx">K</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">K</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">graph</span><span class="p">,</span><span class="nx">db</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">graph</span><span class="p">));</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span></div><div class='line' id='LC146'><span class="kd">function</span> <span class="nx">Hd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="mi">3</span><span class="o">===</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="mi">2</span><span class="o">===</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="nx">u</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">l</span><span class="p">));</span><span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">);</span><span class="nx">c</span><span class="o">!=</span><span class="nx">l</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;default&quot;</span><span class="p">);</span><span class="nx">d</span><span class="o">!=</span><span class="nx">l</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">k</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">{},</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;default&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodes</span><span class="p">();</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">,</span><span class="nx">m</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">]]</span><span class="o">=</span><span class="nx">m</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;sorted&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodes</span><span class="p">();</span><span class="nx">f</span><span class="p">.</span><span class="nx">sort</span><span class="p">();</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">,</span><span class="nx">m</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">]]</span><span class="o">=</span><span class="nx">m</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;increasing degree&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">Xa</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">u</span><span class="p">());</span><span class="nx">f</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]});</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">,</span><span class="nx">m</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">][</span><span class="mi">0</span><span class="p">]]</span><span class="o">=</span><span class="nx">m</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;decreasing degree&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span></div><div class='line' id='LC147'><span class="nx">Xa</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">u</span><span class="p">());</span><span class="nx">f</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]});</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">,</span><span class="nx">m</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">][</span><span class="mi">0</span><span class="p">]]</span><span class="o">=</span><span class="nx">m</span><span class="p">}</span><span class="k">else</span> <span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;Unkown node ordering: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">));</span><span class="nx">g</span><span class="o">=</span><span class="nx">Ed</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">name</span><span class="p">(</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;)_with_int_labels&quot;</span><span class="p">);</span><span class="nx">d</span><span class="o">||</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">node_labels</span><span class="o">=</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span> <span class="nx">g</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.relabel.convert_node_labels_to_integers&quot;</span><span class="p">,</span><span class="nx">Hd</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.convert_node_labels_to_integers&quot;</span><span class="p">,</span><span class="nx">Hd</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Z</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="k">this</span> <span class="k">instanceof</span> <span class="nx">Z</span><span class="p">))</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Z</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">O</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="nx">qa</span><span class="p">(</span><span class="nx">Z</span><span class="p">,</span><span class="nx">O</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.classes.MultiGraph&quot;</span><span class="p">,</span><span class="nx">Z</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.MultiGraph&quot;</span><span class="p">,</span><span class="nx">Z</span><span class="p">);</span><span class="nx">Z</span><span class="p">.</span><span class="nx">__name__</span><span class="o">=</span><span class="s2">&quot;MultiGraph&quot;</span><span class="p">;</span></div><div class='line' id='LC148'><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">c</span><span class="o">!=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">u</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">ia</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="p">{};</span><span class="s2">&quot;object&quot;</span><span class="o">!==</span><span class="nx">r</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The attr_dict argument must be an object.&quot;</span><span class="p">));</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{});</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">{});</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">]){</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">b</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">==</span><span class="nx">l</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">G</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">f</span><span class="p">;)</span><span class="nx">c</span><span class="o">+=</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">,{});</span><span class="nx">K</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">}</span><span class="k">else</span> <span class="nx">c</span><span class="o">!=</span><span class="nx">l</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="p">{},</span><span class="nx">K</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">fb</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">b</span><span class="p">][</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">};</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add_edge</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">a</span><span class="p">;</span></div><div class='line' id='LC149'><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="p">{};</span><span class="s2">&quot;object&quot;</span><span class="o">!==</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The attr_dict argument must be an object.&quot;</span><span class="p">));</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">nb</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="p">{};</span><span class="mi">4</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span><span class="o">:</span><span class="mi">3</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="o">:</span><span class="mi">2</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">:</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;Edge tuple &quot;</span><span class="o">+</span><span class="nx">gc</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; must be a 2-tuple, 3-tuple or 4-tuple.&quot;</span><span class="p">));</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">?</span><span class="nx">J</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">f</span><span class="p">,{})</span><span class="o">:</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">==</span><span class="nx">l</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">g</span> <span class="k">in</span> <span class="nx">a</span><span class="p">;)</span><span class="nx">g</span><span class="o">+=</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">,{});</span><span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="k">this</span><span class="p">)};</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add_edges_from</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">c</span><span class="p">;</span></div><div class='line' id='LC150'><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">w</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){(</span><span class="o">!</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">)</span><span class="o">||!</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">]))</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The edge &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; is not in the graph&quot;</span><span class="p">));</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">b</span><span class="p">];</span><span class="nx">c</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">d</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The edge &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; with key &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; is not in the graph&quot;</span><span class="p">)),</span><span class="nx">I</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">))</span><span class="o">:</span><span class="nx">I</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">$a</span><span class="p">(</span><span class="nx">d</span><span class="p">));</span><span class="mi">0</span><span class="o">===</span><span class="nx">G</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="o">!=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">a</span><span class="p">))};</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">remove_edge</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">w</span><span class="p">;</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">F</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">])}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span> <span class="k">instanceof</span> <span class="nx">W</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="nx">c</span><span class="p">)}},</span><span class="k">this</span><span class="p">)};</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">remove_edges_from</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">F</span><span class="p">;</span></div><div class='line' id='LC151'><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">O</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">&amp;&amp;</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">c</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">b</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">&amp;&amp;</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">]};</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">has_edge</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">O</span><span class="p">;</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">p</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">Xa</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">))};</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">edges</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">p</span><span class="p">;</span></div><div class='line' id='LC152'><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">l</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">{},</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">]]},</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="nx">U</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="nx">S</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="nx">b</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">next</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">===</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span><span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">)}};</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">d</span><span class="p">))</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="o">?</span><span class="p">[</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]]</span><span class="o">:</span><span class="p">[</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]]})</span><span class="o">:</span><span class="nx">S</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="nx">b</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">next</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">===</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span><span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">)}};</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span></div><div class='line' id='LC153'><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">d</span><span class="p">))</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="o">?</span><span class="p">[</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span><span class="o">:</span><span class="p">[</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">]})};</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">edges_iter</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">e</span><span class="p">;</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">T</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">s</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">l</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">&amp;&amp;</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">?</span><span class="nx">c</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">J</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">b</span><span class="p">],</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">b</span><span class="p">]</span><span class="o">:</span><span class="nx">d</span><span class="p">};</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">get_edge_data</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">T</span><span class="p">;</span></div><div class='line' id='LC154'><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">u</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">]]},</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="nx">U</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">Ua</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="o">+=</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">)})});</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="o">+=</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">)});</span><span class="k">return</span><span class="p">[</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">]})</span><span class="o">:</span><span class="nx">Ua</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="o">+=</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="k">return</span><span class="p">[</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">+</span> <span class="o">+</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]))]})};</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">degree_iter</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">u</span><span class="p">;</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">n</span><span class="o">=</span><span class="nx">ba</span><span class="p">(</span><span class="nx">k</span><span class="p">);</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">is_multigraph</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">n</span><span class="p">;</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">ba</span><span class="p">(</span><span class="nx">p</span><span class="p">);</span></div><div class='line' id='LC155'><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">is_directed</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="p">;</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">H</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">$</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="k">return</span> <span class="nx">S</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">s</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">T</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">])]})}.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">));</span><span class="nx">a</span><span class="p">.</span><span class="nx">graph</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">graph</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">to_directed</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">H</span><span class="p">;</span></div><div class='line' id='LC156'><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">aa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="o">?</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">])})})</span><span class="o">:</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">])})})</span><span class="o">:</span><span class="nx">b</span><span class="o">?</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">])})})</span><span class="o">:</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">])})});</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">selfloop_edges</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">aa</span><span class="p">;</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">P</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">==</span><span class="nx">l</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">size</span><span class="p">()</span><span class="o">:</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">&amp;&amp;</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">?</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">b</span><span class="p">])</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span></div><div class='line' id='LC157'><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">number_of_edges</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">P</span><span class="p">;</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">B</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="k">this</span><span class="p">.</span><span class="nx">constructor</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">adj</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">;</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{};</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">F</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span> <span class="k">in</span> <span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">db</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">b</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">;</span><span class="nx">c</span><span class="p">[</span><span class="nx">m</span><span class="p">][</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">}})});</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">});</span><span class="nx">b</span><span class="p">.</span><span class="nx">graph</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">graph</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">subgraph</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">B</span><span class="p">;</span><span class="kd">function</span> <span class="nx">$</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="k">this</span> <span class="k">instanceof</span> <span class="nx">$</span><span class="p">))</span><span class="k">return</span> <span class="k">new</span> <span class="nx">$</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">X</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="nx">qa</span><span class="p">(</span><span class="nx">$</span><span class="p">,</span><span class="nx">X</span><span class="p">);</span><span class="kd">var</span> <span class="nx">Id</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">Jd</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">Kd</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">Kd</span> <span class="k">in</span> <span class="nx">Jd</span><span class="p">)</span><span class="nx">Jd</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">Kd</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;constructor&quot;</span><span class="o">!==</span><span class="nx">Kd</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">Id</span><span class="p">[</span><span class="nx">Kd</span><span class="p">]</span><span class="o">=</span><span class="nx">Jd</span><span class="p">[</span><span class="nx">Kd</span><span class="p">]);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.classes.MultiDiGraph&quot;</span><span class="p">,</span><span class="nx">$</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.MultiDiGraph&quot;</span><span class="p">,</span><span class="nx">$</span><span class="p">);</span><span class="nx">$</span><span class="p">.</span><span class="nx">__name__</span><span class="o">=</span><span class="s2">&quot;MultiDiGraph&quot;</span><span class="p">;</span></div><div class='line' id='LC158'><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">c</span><span class="o">!=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">u</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">ia</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="p">{};</span><span class="s2">&quot;object&quot;</span><span class="o">!==</span><span class="nx">r</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The attr_dict argument must be an object.&quot;</span><span class="p">));</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{});</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">{});</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">a</span><span class="p">]){</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">b</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">==</span><span class="nx">l</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">G</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">f</span><span class="p">;)</span><span class="nx">c</span><span class="o">+=</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">toString</span><span class="p">(),{});</span><span class="nx">K</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">}</span><span class="k">else</span> <span class="nx">c</span><span class="o">!=</span><span class="nx">l</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="p">{},</span><span class="nx">K</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">fb</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">b</span><span class="p">][</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">};</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add_edge</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">a</span><span class="p">;</span></div><div class='line' id='LC159'><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">w</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){(</span><span class="o">!</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">)</span><span class="o">||!</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">]))</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The edge &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; is not in the graph&quot;</span><span class="p">));</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">b</span><span class="p">];</span><span class="nx">c</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">d</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;The edge &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; with key &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; is not in the graph&quot;</span><span class="p">)),</span><span class="nx">I</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">))</span><span class="o">:</span><span class="nx">I</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">$a</span><span class="p">(</span><span class="nx">d</span><span class="p">));</span><span class="mi">0</span><span class="o">===</span><span class="nx">G</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">b</span><span class="p">),</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">a</span><span class="p">))};</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">remove_edge</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">w</span><span class="p">;</span></div><div class='line' id='LC160'><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">l</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">[</span><span class="nx">a</span><span class="p">]]},</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="nx">ub</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="nx">S</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="o">?</span><span class="p">[</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]]</span><span class="o">:</span><span class="p">[</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]]})</span><span class="o">:</span><span class="nx">S</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="o">?</span><span class="p">[</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span><span class="o">:</span><span class="p">[</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">]})};</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">edges_iter</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">e</span><span class="p">;</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ca</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">e</span><span class="p">;</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">out_edges_iter</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ca</span><span class="p">;</span></div><div class='line' id='LC161'><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ga</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">Xa</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ca</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">))};</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">out_edges</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ga</span><span class="p">;</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">J</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">l</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">a</span><span class="p">]]},</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="nx">ub</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="nx">S</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="o">?</span><span class="p">[</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]]</span><span class="o">:</span><span class="p">[</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]]})</span><span class="o">:</span><span class="nx">S</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="o">?</span><span class="p">[</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span><span class="o">:</span><span class="p">[</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">]})};</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">in_edges_iter</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">J</span><span class="p">;</span></div><div class='line' id='LC162'><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">V</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">Xa</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">))};</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">in_edges</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">V</span><span class="p">;</span></div><div class='line' id='LC163'><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">u</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">pb</span><span class="p">(</span><span class="nx">Ua</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">a</span><span class="p">]]},</span><span class="k">this</span><span class="p">),</span><span class="nx">Ua</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">a</span><span class="p">]]},</span><span class="k">this</span><span class="p">))</span><span class="o">:</span><span class="nx">pb</span><span class="p">(</span><span class="nx">U</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">),</span><span class="nx">U</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">));</span><span class="k">return</span> <span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">P</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="o">+=+</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">)})});</span><span class="nx">F</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="o">+=+</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">)})});</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="p">]})</span><span class="o">:</span><span class="nx">P</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="o">+=</span><span class="nx">nb</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="o">+=</span><span class="nx">nb</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="o">+</span><span class="nx">c</span><span class="p">]})};</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">degree_iter</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">u</span><span class="p">;</span></div><div class='line' id='LC164'><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">U</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">[</span><span class="nx">a</span><span class="p">]]},</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="nx">U</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">P</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="o">+=+</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">)})});</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span><span class="nx">c</span><span class="p">]})</span><span class="o">:</span><span class="nx">P</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="o">+=</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="p">]})};</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">in_degree_iter</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">U</span><span class="p">;</span></div><div class='line' id='LC165'><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Z</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">P</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">[</span><span class="nx">a</span><span class="p">]]},</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="nx">U</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">P</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="o">+=+</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">)})});</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span><span class="nx">c</span><span class="p">]})</span><span class="o">:</span><span class="nx">P</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="o">+=</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="p">]})};</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">out_degree_iter</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">Z</span><span class="p">;</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">n</span><span class="o">=</span><span class="nx">ba</span><span class="p">(</span><span class="nx">k</span><span class="p">);</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">is_multigraph</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">n</span><span class="p">;</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">ba</span><span class="p">(</span><span class="nx">k</span><span class="p">);</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">is_directed</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">b</span><span class="p">;</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">H</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">vb</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span></div><div class='line' id='LC166'><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">to_directed</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">H</span><span class="p">;</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">S</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">Z</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">());</span><span class="nx">b</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">S</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">s</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span><span class="nx">pa</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">O</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span><span class="k">return</span><span class="p">[</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])]},</span><span class="k">this</span><span class="p">)))</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">S</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">s</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])]}));</span><span class="nx">b</span><span class="p">.</span><span class="nx">graph</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">graph</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">node</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">to_undirected</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">S</span><span class="p">;</span></div><div class='line' id='LC167'><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">B</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="k">this</span><span class="p">.</span><span class="nx">constructor</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">succ</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">pred</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">;</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{};</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{}});</span><span class="nx">M</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">F</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span> <span class="k">in</span> <span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">db</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="nx">b</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nx">x</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="nx">n</span><span class="p">][</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">x</span><span class="p">}})});</span><span class="nx">M</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">a</span><span class="p">]},</span><span class="k">this</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">graph</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">graph</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">subgraph</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">B</span><span class="p">;</span></div><div class='line' id='LC168'><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">reverse</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){(</span><span class="nx">a</span><span class="o">=!</span><span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="k">this</span><span class="p">.</span><span class="nx">constructor</span><span class="p">(</span><span class="nx">l</span><span class="p">,{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;Reverse of (&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">Ua</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">])]})),</span><span class="nx">a</span><span class="p">.</span><span class="nx">graph</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">graph</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">pred</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">adj</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">succ</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">reverse</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">reverse</span><span class="p">;</span><span class="kd">function</span> <span class="nx">Ld</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">nodes</span><span class="p">()}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.classes.func.nodes&quot;</span><span class="p">,</span><span class="nx">Ld</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.nodes&quot;</span><span class="p">,</span><span class="nx">Ld</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Md</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">A</span><span class="p">()}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.classes.func.nodes_iter&quot;</span><span class="p">,</span><span class="nx">Md</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.nodes_iter&quot;</span><span class="p">,</span><span class="nx">Md</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Pd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">p</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.classes.func.edges&quot;</span><span class="p">,</span><span class="nx">Pd</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.edges&quot;</span><span class="p">,</span><span class="nx">Pd</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.edges_iter&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">)});</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.degree&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">t</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)});</span><span class="kd">function</span> <span class="nx">Qd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">L</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.classes.func.neighbors&quot;</span><span class="p">,</span><span class="nx">Qd</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.neighbors&quot;</span><span class="p">,</span><span class="nx">Qd</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.number_of_nodes&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">Q</span><span class="p">()});</span></div><div class='line' id='LC169'><span class="kd">function</span> <span class="nx">Rd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">P</span><span class="p">()}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.classes.func.number_of_edges&quot;</span><span class="p">,</span><span class="nx">Rd</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.number_of_edges&quot;</span><span class="p">,</span><span class="nx">Rd</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Sd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Q</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">P</span><span class="p">();</span><span class="k">return</span> <span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">()</span><span class="o">?</span><span class="nx">c</span><span class="o">/</span><span class="p">(</span><span class="nx">b</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span><span class="o">:</span><span class="mi">2</span><span class="o">*</span><span class="nx">c</span><span class="o">/</span><span class="p">(</span><span class="nx">b</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="p">))}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.classes.func.density&quot;</span><span class="p">,</span><span class="nx">Sd</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.density&quot;</span><span class="p">,</span><span class="nx">Sd</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Td</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">ab</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">t</span><span class="p">());</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nb">Math</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">Pa</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">+=</span><span class="mi">1</span><span class="p">});</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.classes.func.degree_histogram&quot;</span><span class="p">,</span><span class="nx">Td</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.degree_histogram&quot;</span><span class="p">,</span><span class="nx">Td</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Ud</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">()}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.classes.func.is_directed&quot;</span><span class="p">,</span><span class="nx">Ud</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.is_directed&quot;</span><span class="p">,</span><span class="nx">Ud</span><span class="p">);</span></div><div class='line' id='LC170'><span class="kd">function</span> <span class="nx">Vd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(){</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;Frozen graph can&#39;t be modified&quot;</span><span class="p">))}</span><span class="nx">a</span><span class="p">.</span><span class="nx">add_node</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">I</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">add_nodes_from</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">remove_node</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">R</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">remove_nodes_from</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">$</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">add_edge</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">add_edges_from</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">remove_edge</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">w</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">remove_edges_from</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">F</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">frozen</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Ea</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.classes.func.freeze&quot;</span><span class="p">,</span><span class="nx">Vd</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.freeze&quot;</span><span class="p">,</span><span class="nx">Vd</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Wd</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">Ea</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.classes.func.is_frozen&quot;</span><span class="p">,</span><span class="nx">Wd</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.is_frozen&quot;</span><span class="p">,</span><span class="nx">Wd</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Xd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.classes.func.subgraph&quot;</span><span class="p">,</span><span class="nx">Xd</span><span class="p">);</span></div><div class='line' id='LC171'><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.subgraph&quot;</span><span class="p">,</span><span class="nx">Xd</span><span class="p">);</span><span class="kd">function</span> <span class="nx">Yd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">s</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">k</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">a</span><span class="p">.</span><span class="nx">constructor</span><span class="p">;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">j</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.classes.func.create_empty_copy&quot;</span><span class="p">,</span><span class="nx">Yd</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.create_empty_copy&quot;</span><span class="p">,</span><span class="nx">Yd</span><span class="p">);</span></div><div class='line' id='LC172'><span class="kd">function</span> <span class="nx">Zd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">!=</span><span class="nx">l</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">m</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="k">new</span> <span class="nx">W</span><span class="p">(</span><span class="s2">&quot;node &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; not in graph&quot;</span><span class="p">)),</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;Node &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; has the following properties:\n&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;Degree: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">t</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;\n&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">+=</span><span class="s2">&quot;Neighbors: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">L</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;Name: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;\n&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;Type: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">__name__</span><span class="o">+</span><span class="s2">&quot;\n&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;Number of nodes: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">Q</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;\n&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;Number of edges: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">P</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;\n&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Q</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">())</span><span class="nx">c</span><span class="o">+=</span><span class="s2">&quot;Average in degree: &quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">v</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">ab</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">na</span><span class="p">()))</span><span class="o">/</span><span class="nx">d</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;\n&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">+=</span><span class="s2">&quot;Average out degree: &quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">v</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">ab</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">ra</span><span class="p">()))</span><span class="o">/</span><span class="nx">d</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">4</span><span class="p">);</span></div><div class='line' id='LC173'><span class="k">else</span> <span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">v</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">ab</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">t</span><span class="p">())),</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;Average degree: &quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">e</span><span class="o">/</span><span class="nx">d</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">4</span><span class="p">))}</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.classes.func.info&quot;</span><span class="p">,</span><span class="nx">Zd</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.info&quot;</span><span class="p">,</span><span class="nx">Zd</span><span class="p">);</span><span class="kd">function</span> <span class="nx">$d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">[</span><span class="nx">e</span><span class="p">][</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">})}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.classes.func.set_node_attributes&quot;</span><span class="p">,</span><span class="nx">$d</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.set_node_attributes&quot;</span><span class="p">,</span><span class="nx">$d</span><span class="p">);</span><span class="kd">function</span> <span class="nx">ae</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{};</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">qa</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">])});</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.classes.func.get_node_attributes&quot;</span><span class="p">,</span><span class="nx">ae</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.get_node_attributes&quot;</span><span class="p">,</span><span class="nx">ae</span><span class="p">);</span><span class="kd">function</span> <span class="nx">be</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">])[</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">]]</span><span class="o">=</span><span class="nx">b</span><span class="p">})}</span></div><div class='line' id='LC174'><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.classes.func.set_edge_attributes&quot;</span><span class="p">,</span><span class="nx">be</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.set_edge_attributes&quot;</span><span class="p">,</span><span class="nx">be</span><span class="p">);</span><span class="kd">function</span> <span class="nx">ce</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{};</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">p</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]]]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">][</span><span class="nx">b</span><span class="p">])});</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.classes.func.get_edge_attributes&quot;</span><span class="p">,</span><span class="nx">ce</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.get_edge_attributes&quot;</span><span class="p">,</span><span class="nx">ce</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="s2">&quot;jsnx.version&quot;</span><span class="p">,</span><span class="s2">&quot;0.1.1&quot;</span><span class="p">);}));</span></div></pre></div>
          </td>
        </tr>
      </table>
  </div>

          </div>
        </div>

        <a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
        <div id="jump-to-line" style="display:none">
          <form accept-charset="UTF-8" class="js-jump-to-line-form">
            <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;">
            <button type="submit" class="button">Go</button>
          </form>
        </div>

</div>

<div id="js-frame-loading-template" class="frame frame-loading large-loading-area" style="display:none;">
  <img class="js-frame-loading-spinner" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-128.gif" height="64" width="64">
</div>


          </div>
        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div>
  </div><!-- /.site -->


      <div id="footer-push"></div><!-- hack for sticky footer -->
    </div><!-- end of wrapper - hack for sticky footer -->

      <!-- footer -->
      <div id="footer">
  <div class="container clearfix">

      <dl class="footer_nav">
        <dt>GitHub</dt>
        <dd><a href="/about">About us</a></dd>
        <dd><a href="/blog">Blog</a></dd>
        <dd><a href="/contact">Contact &amp; support</a></dd>
        <dd><a href="https://enterprise.github.com/">GitHub Enterprise</a></dd>
        <dd><a href="https://status.github.com/">Site status</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Applications</dt>
        <dd><a href="http://mac.github.com/">GitHub for Mac</a></dd>
        <dd><a href="http://windows.github.com/">GitHub for Windows</a></dd>
        <dd><a href="http://eclipse.github.com/">GitHub for Eclipse</a></dd>
        <dd><a href="http://mobile.github.com/">GitHub mobile apps</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Services</dt>
        <dd><a href="http://get.gaug.es/">Gauges: Web analytics</a></dd>
        <dd><a href="https://speakerdeck.com">Speaker Deck: Presentations</a></dd>
        <dd><a href="https://gist.github.com">Gist: Code snippets</a></dd>
        <dd><a href="https://jobs.github.com/">Job board</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Documentation</dt>
        <dd><a href="https://help.github.com/">GitHub Help</a></dd>
        <dd><a href="http://developer.github.com/">Developer API</a></dd>
        <dd><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></dd>
        <dd><a href="http://pages.github.com/">GitHub Pages</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>More</dt>
        <dd><a href="http://training.github.com/">Training</a></dd>
        <dd><a href="/edu">Students &amp; teachers</a></dd>
        <dd><a href="http://shop.github.com">The Shop</a></dd>
        <dd><a href="/plans">Plans &amp; pricing</a></dd>
        <dd><a href="http://octodex.github.com/">The Octodex</a></dd>
      </dl>

      <hr class="footer-divider">


    <p class="right">&copy; 2013 <span title="0.06018s from fe1.rs.github.com">GitHub</span>, Inc. All rights reserved.</p>
    <a class="left" href="/">
      <span class="mega-octicon octicon-mark-github"></span>
    </a>
    <ul id="legal">
        <li><a href="/site/terms">Terms of Service</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
    </ul>

  </div><!-- /.container -->

</div><!-- /.#footer -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/fkling/JSNetworkX/suggestions/commit">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

    
    <span id='server_response_time' data-time='0.06057' data-host='fe1'></span>
    
  </body>
</html>

